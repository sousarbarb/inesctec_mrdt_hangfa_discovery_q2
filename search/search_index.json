{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Integrating Multimodal Perception into Ground Mobile Robots","text":"<p>Abstract</p> <p>Multimodal perception systems enhance the robustness and adaptability of autonomous mobile robots by integrating heterogeneous sensor modalities, improving long-term localisation and mapping in dynamic environments and human-robot interaction. Current mobile platforms often focus on specific sensor configurations and prioritise cost-effectiveness, possibly limiting the flexibility of the user to extend the original robots further. This paper presents a methodology to integrate multimodal perception into a ground mobile platform, incorporating wheel odometry, 2D laser scanners, 3D Light Detection and Ranging (LiDAR), and RGBD cameras. The methodology describes the electronics design to power devices, firmware, computation and networking architecture aspects, and mechanical mounting for the sensory system based on 3D printing, laser cutting, and bending metal sheet processes. Experiments demonstrate the usage of the revised platform in 2D and 3D localisation and mapping and pallet pocket estimation applications. All the documentation and designs are accessible in a public repository.</p> <p>Keywords: Light Detection and Ranging (LiDAR), mobile robot, multimodal perception, open-source, RGBD camera.</p> <p>This repository contains all the documentation associated with the modifications made by INESC TEC on the Hangfa Discovery Q2 mobile platform in order to be compatible with multimodal perception. These modifications also enable the platform to be integrated in the Robot Operating System (ROS), facilitating its usage for research topics such as perception, localisation and mapping, multi-robot coordination (when more than one platform is available to the user), Artificial Intelligence (AI) applied on autonomous mobile robotics, among other topics.</p> <p>Furthermore, the main goals of this website and the respective GitHub repository is to help researchers interested in modifying their Hangfa mobile platforms or applying all the modifications that we have made to other similarly small mobile platforms. As a result, the website includes the following information:</p> <ul> <li>Platform: brief presentation of the   Hangfa Discovery Q2   robot mobile platform</li> <li>Bill Of Materials (BOM): summary on the components used for   the modifications to the platform</li> <li>Electronics: presentation of the electronics redesign   (battery management and power budgets, motor drivers, encoders reading, and   external DC power output for the user)</li> <li>Single Board Computer (SBC): computing units   considered in the work and their configuration in terms of Operating System   (OS), Robot Operating System (ROS) setup, configuring remote access, set up   development environment, and configuring the firmware communication</li> <li>Network: TBC</li> <li>Sensors: TBC</li> <li>... To Be Completed (TBC)</li> </ul> <p>Lastly, this work is within the scope of the Mobile Robotics Development Team (MRDT) in the national project GreenAuto: Green innovation for the Automotive Industry. MRDT team is a Research &amp; Development (R&amp;D) team from the CRIIS - Centre for Robotics in Industry and Intelligent Systems at the iiLab - Industry and Innovation Laboratory.</p>"},{"location":"#videos","title":"Videos","text":"<ul> <li>How To Watch<ol> <li>Press the  Play button</li> <li>Use the  Previous and  Next    buttons to navigate through the playlist</li> </ol> </li> <li>Playlist YouTube Link: https://youtube.com/playlist?list=PLvp8fJUEPxYSkKsOrCN5FzjuhhSfVgSuR&amp;si=SDjPObDUzQucRvuN</li> </ul>"},{"location":"#contacts","title":"Contacts","text":"<p>If you have any questions or you want to know more about this work, please contact one of the following contributors:</p> <ul> <li>Ricardo B. Sousa   (rbs@fe.up.pt)   (Corresponding Author) ,   ,   ,   ,   ,   ,   </li> <li>H\u00e9ber Miguel Sobreira   (heber.m.sobreira@inesctec.pt)   ,   ,   ,   </li> <li>Jo\u00e3o G. Martins   (joao.g.martins@inesctec.pt)   ,   </li> <li>Paulo G. Costa   (paco@fe.up.pt)   ,   ,   </li> <li>Manuel F. Silva   (mss@isep.ipp.pt)   ,   </li> <li>Ant\u00f3nio Paulo Moreira   (amoreira@fe.up.pt)   ,   </li> </ul>"},{"location":"#institutions","title":"Institutions","text":""},{"location":"#acknowledgements","title":"Acknowledgements","text":"<ul> <li>5dpo Robotics Team</li> <li></li> <li></li> <li></li> </ul>"},{"location":"#funding","title":"Funding","text":"<p>GreenAuto: Green innovation for the Automotive Industry</p> <ul> <li>Operation Code: 02/C05-i01.02/2022.PC644867037-00000013</li> <li>Beneficiary: Peugeot Citr\u00f6en Autom\u00f3veis Portugal, S.A.</li> <li>Work Package: WP10 - Automated logistics for the automotive industry</li> <li>Product, Processes, or Services (PPS):   PPS18 - 3D navigation system for mobile robotic equipment</li> <li>Consortium Partners:<ul> <li>Flowbotic Mobile Systems, Lda (leader)</li> <li>Faculty of Engineering, University of Porto (FEUP)</li> <li>INESC TEC - Institute for Systems and Computer Engineering, Technology and Science</li> <li>STAR</li> <li>Kaizen</li> <li>Institute for Systems and Robotics (ISR)-Coimbra</li> </ul> </li> <li>Timeline: October 2021 - December 2025</li> <li>Duration: 51 months</li> <li>URL: https://transparencia.gov.pt/en/fundos-europeus/prr/beneficiarios-projetos/projeto/02/C05-i01.02/2022.PC644867037-00000013/</li> </ul>"},{"location":"#citation","title":"Citation","text":"<p>Plain Text</p> <p>R.B. Sousa, H.M. Sobreira, J.G. Martins, P.G. Costa, M.F. Silva and A.P. Moreira, \"Integrating Multimodal Perception into Ground Mobile Robots,\" 2025 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC2025), Madeira, Portugal, 2025, pp. TBD, doi: TBD [Manuscript accepted for publication]. [github] [preprint]</p> <p>BibTex</p> <pre><code>@INPROCEEDINGS{sousa2025icarsc,\n  author    = {Ricardo B. Sousa and H\u00e9ber Miguel Sobreira and Jo\u00e3o G. Martins and Paulo G. Costa and Manuel F. Silva and Ant\u00f3nio P. Moreira},\n  booktitle = {2025 IEEE International Conference on Autonomous Robot Systems and Competitions (ICARSC)},\n  title     = {Integrating Multimodal Perception into Ground Mobile Robots},\n  year      = {2025},\n  volume    = {},\n  number    = {},\n  pages     = {--},\n  doi       = {},\n  note      = {Manuscript accepted for publication},}\n</code></pre>"},{"location":"content/bom/","title":"Bill Of Materials (BOM)","text":""},{"location":"content/bom/#documents","title":"Documents","text":"<ul> <li>bom.pdf</li> <li>bom.xlsx</li> </ul>"},{"location":"content/discovery-q2/","title":"Hangfa Discovery Q2","text":"<p>The Discovery Q2 is a small robot platform developed by HANGFA Robotics. This platform is a four-wheeled omnidirectional robot with 4 QMA10 mecanum wheels driven by 4 coreless servo motors, supporting CAN bus and RS232 serial ports. The original plaform provides a Software Development Kit (SDK), allowing users to extend the capabilities of the plaform. This SDK provides a complete communication protocol and source code samples based on the STM32F407.</p>"},{"location":"content/discovery-q2/#links","title":"Links","text":"<ul> <li>HANGFA Robotics Europe</li> <li>Discovery Series (Chengdu HANGFA Hydraulic Engineering Co. Ltd)</li> <li>Discovery Series (HANGFA Robotics Europe)</li> <li>Discovery Q2</li> <li>QMA Mecanum Wheel Series (Chengdu HANGFA Hydraulic Engineering Co. Ltd)</li> <li>QMA Mecanum Wheel Series (HANGFA Robotics Europe)</li> <li>QMA10 Mecanum Wheel</li> </ul>"},{"location":"content/discovery-q2/#documents","title":"Documents","text":"<ul> <li>Hangfa Discovery Q2 User Manual</li> <li>Hangfa Discovery Q2 Robot Main Control Board (RHF407) User Manual</li> <li>Hangfa Discovery Q2 Dimensions   (available at   http://www.hangfa.com/products/research-platform/discoveryQ2.html)</li> <li>Hangfa Compass Q2 User Manual   (available at   https://cdn.robotshop.com/media/h/hfa/rb-hfa-01/pdf/compass_q2_user_manual_1.2.pdf)</li> </ul>"},{"location":"content/discovery-q2/#characteristics","title":"Characteristics","text":"Description Value Body Structure aluminum alloy (bent yellow metal sheets) Dimensions 359x313.5x114mm Weight 7kg Ground Clearance 23mm Type four-wheeled omnidirectional Maximum Translational Speed 0.65m/s Maximum Rotational Speed 140\u00ba/s Autonomy &gt;10h @ 3kg load, 0.5m/s, 70% moving rate Wheels QMA10 mecanum (Hangfa) Wheels Structure carbon steel hub Wheels Dimensions 101.6mm (diameter) x 45.7mm (wide) Wheels Weight 350g Wheels Maximum Load 30kg Wheels #Rollers 10 Wheels Rollers Structure two bearings fixation, rubber surface Motors Model Faulhaber 2342 OEM DC motor Motors Voltage (Rated) 12V Motors Current (Rated) 1.1A Motors Output Power (Rated) 11W Motors Speed (Rated) 5800rpm Motors Speed (No-load) 6800rpm Motors Encoders 5V, 2 channels, 12CPR Motors Fixation Type outer body bearing block bears the wheel in axial and radial loads Motor Drivers IMDR4 module boards Motor Drivers Interfaces CAN, RS232 Battery 12V DC 10400mAh Li-ion Battery Charger KXD-126300 Li-ion charger, 100~240VAC input, 12.6VDC @ 3.0A output External User Power 5V @ 5A DC Electrical Protection 10A power fuse"},{"location":"content/discovery-q2/#gallery","title":"Gallery","text":""},{"location":"content/discovery-q2/#limitations-for-multimodal-perception","title":"Limitations for Multimodal Perception","text":"<ul> <li>No computer unit included to, e.g., run Robot Operating System (ROS)-based   executable nodes</li> <li>Wheeled odometry data not available</li> <li>IMDR4 board does not have an interface to change the internal closed-loop   control if needed</li> <li>Only 5V @ 5A external output provided to the user</li> <li>No native support for 3D LiDAR and RGBD cameras</li> </ul>"},{"location":"content/network/","title":"Network Configuration","text":"<p>TBC</p>"},{"location":"content/electronics/","title":"Electronics","text":"<p>The electronics of the original platform are completely revised in this work. The original Discovery Q2 has some drawbacks that hinder its usage for robotics Research &amp; Development (R&amp;D):</p> <ul> <li>no computing unit to allow the usage of the Robot Operating System (ROS)   with the robot</li> <li>no wheeled odometry data available to the user</li> <li>no interface with the original motor drivers board to allow modifications on   the internal closed-loop speed control of the wheels / linear and angular   velocity control of the robot</li> <li>only a 5V @ 5A DC external output for the user (limiting the possibilities of   powering multiple sensors such as 2D/3D LiDAR)</li> <li>does not support natively 3D LiDAR or RGBD cameras</li> </ul> <p>As a result, this work completely over overhauls the original electronics, only leaving the Faulhaber 2342 motors present in the original Hangfa Discovery Q2 platform.</p>"},{"location":"content/electronics/#overview","title":"Overview","text":""},{"location":"content/electronics/assembly/","title":"Assembly","text":""},{"location":"content/electronics/assembly/#3d-electronics-framework","title":"3D Electronics Framework","text":"<p>3D Model</p> <ul> <li>AutoDesk Fusion 360</li> <li>STEP</li> </ul> <p>Legend</p> <ul> <li>A: Tattu 10000mAh 11.1V 15C 3S LiPo Battery</li> <li>B: 18650 BMS Charger 3S 12.6V 20A Rev. 2.0</li> <li>C: voltage and ground electric buses</li> <li>D: Faulhaber 2342 OEM DC Motors (and optical encoders with 12 CPR)</li> <li>E: Cytron 13A 5-30V Single DC Motor Driver</li> <li>F: Arduino Mega 2560 Rev3 + Arduino Mega Proto Shield Rev3 (PCB)</li> <li>G: DC 5-30V to 1.25-30V 8A Buck Boost Converter</li> </ul>"},{"location":"content/electronics/assembly/#base-plate","title":"Base Plate","text":""},{"location":"content/electronics/assembly/#first-level","title":"First Level","text":""},{"location":"content/electronics/assembly/#arduino-mega-proto-shield","title":"Arduino Mega Proto Shield","text":"<p>Documents</p> <ul> <li>Arduino Mega 2560 - Proto Shield Connections</li> <li>Hangfa Discovery Q2 - Encoders Pinout</li> </ul> <p>Legend</p> <ul> <li>A: motor drivers connectors (GND, PWM, direction)</li> <li>B: encoders connectors (GND, CHA, CHB, Vcc) with 3.3k\u2126 pull-up resistors</li> <li>C: Arduino Mega standard headers</li> </ul>"},{"location":"content/electronics/assembly/#front-view","title":"Front View","text":""},{"location":"content/electronics/assembly/#back-view","title":"Back View","text":""},{"location":"content/electronics/motors/","title":"Motors","text":"Description Value Model Faulhaber 2342 OEM DC motor Voltage (Rated) 12V Current (Rated) 1.1A Output Power (Rated) 11W Speed (Rated) 5800rpm Speed (No-load) 6800rpm Encoders 5V, 2 channels, 12CPR Fixation Type outer body bearing block bears the wheel in axial and radial loads"},{"location":"content/electronics/motors/#drivers","title":"Drivers","text":"<ul> <li>Goal: control the DC motors of the original   Hangfa Discovery Q2   mobile platform</li> <li>Model: Cytron 13A 5-30V Single DC Motor Driver</li> <li>Voltage range 5-30V compatible with the Faulhaber 2342 OEM DC motor (12V)</li> <li>Maximum continuous current of 13A and peak motor current of 30A should be   compatible with the Faulhaber 2342 OEM DC motor (rated at 1.1A, 11W)</li> <li>Single PWM signal for speed control with a digital direction pin to set the   direction of the motor speed</li> <li>3.3V and 5V logic level input compatible with the Arduino Mega 2560   microcontroller</li> </ul>"},{"location":"content/electronics/motors/#encoders","title":"Encoders","text":"<ul> <li>Goal: 5V, 2 channels, 12CPR encoders present on the Faulhaber 2342 OEM DC   motors (green PCB board on top of the motors) generate quadrature signals for   the microcontroller to read the angular speed of the motors</li> <li>Requirement: upon experimental test, 3.3 k\u2126 pull-up resistors are soldered   to the channels A and B inputs of the four encoders on the microcontroller's   proto shield to reduce signal noise and improve the quadrature between   channels A and B</li> </ul> <p>Warning</p> <p>The cables on the encoders of the original Hangfa Discovery Q2 mobile platform seem to not be correctly soldered into the encorder's green board. This flaw may lead to incorrect encoders reading. As a result, you probably are more safe if you resolder all the cables in the encoders.</p> <p>Tip</p> <p>The yellow stuff on the encoder's green board comes out with heat (e.g., use a heat gun carefully with the help of a tool to remove the yellow stuff in order to be able to resolder the cables).</p>"},{"location":"content/electronics/power/","title":"Power","text":""},{"location":"content/electronics/power/#battery","title":"Battery","text":"<ul> <li>Goal: power all the electronics related to the robot's base platform   (including motors, motor drivers, external devices of the user that may   require DC power)</li> <li>Model: Tattu 10000mAh 11.1V 15C 3S LiPo Battery</li> <li>11.1V makes it compatible to power the Faulhaber 2342 OEM DC motors (12V)</li> <li>11.1V is also compatible to power the Arduino Mega 2560 (7-12V recommended,   6-20V limit), even though the microcontroller can be powered directly from the   USB connection</li> </ul>"},{"location":"content/electronics/power/#battery-management-system-bms","title":"Battery Management System (BMS)","text":"<ul> <li>Goal: balance the voltage of the battery cells both when discharging and   upon charging</li> <li>Model: 18650 BMS Charger 3S 12.6V 20A Rev. 2.0</li> <li>Compatible with 3S (three cells in series) batteries</li> <li>Compatible with the maximum voltage of each LiPo cell (4.2V)</li> </ul>"},{"location":"content/electronics/power/#dcdc-buck-boost-converter","title":"DC/DC Buck-Boost Converter","text":"<ul> <li>Goal: provide a regulated and adjustable DC power output for external   devices (e.g., Ethernet switch, 3D LiDARs)</li> <li>Model: DC 5-30V to 1.25-30V 8A Buck Boost Converter</li> <li>Input voltage compatible with the output voltage of the LiPo battery</li> <li>Output voltage compatible with common voltage values such as 5V / 12V / 24V</li> </ul>"},{"location":"content/electronics/power/#charging","title":"Charging","text":"<p>Hangfa Discovery Q2</p> <ul> <li>A: charging connector</li> <li>B: 20A power fuse for electrical protection</li> <li>C: ON/OFF switch</li> </ul> <p></p>"},{"location":"content/electronics/power/#original-charger","title":"Original Charger","text":"<p>Model: KXD-126300 Li-ion charger, 100~240VAC input, 12.6VDC @ 3.0A output</p> <p></p> <p>Warning</p> <p>The original charger that comes with the platform may not be the most suitable for charging the LiPo battery. Even if the charger indicator turns green, it does not necessarily mean that charging has stopped, which could lead to overcharging and potentially swollen batteries.</p> <ol> <li>Turn OFF the Discovery Q2 platform</li> <li>Connect the charger to AC power (LED on the charger should turn green)</li> <li>Connect the charger output plug to the Discovery Q2 platform<ul> <li>If the LED on the charger turns red, it is charging the platform</li> <li>Otherwise, the battery is fully charged</li> </ul> </li> <li>Disconnect the charger from the platform when the battery is fully charged</li> </ol>"},{"location":"content/electronics/power/#lipo-charger","title":"LiPo Charger","text":"<ul> <li>Model: LiPo Battery Charger LBC-011 (or any other charger specific for   LiPo batteries)<ul> <li>iMAX B6AC User Manual</li> </ul> </li> </ul> <ol> <li>Turn OFF the Discovery Q2 platform</li> <li>Connect the charger to AC power (charger screen should turn on)</li> <li>Select the CHARGE mode (use the buttons     Status  to    navigate through the available modes)</li> <li>If the charger is not configure for LiPo batteries<ol> <li>Press (just one click!) Batt. Type button</li> <li>Select PROGRAM SELECT LiPo BATT (use the buttons     Status  to    navigate through the available programs and settings)</li> <li>Press (just one click!) Enter</li> </ol> </li> <li>If the charger is not configure for 3.0A 11.1V (3S) when in    CHARGE mode<ol> <li>Press (just one click!) Enter button</li> <li>Use the buttons     Status  to    adjust the charging current to 3.0A</li> <li>Press (just one click!) Enter button</li> <li>Use the buttons     Status  to    select the 11.1V (3S) battery configuration</li> <li>Press (just one click!) Enter button</li> </ol> </li> <li>Connect the charger output plug to the Discovery Q2 platform</li> <li>Long press on the Start button to start the charging</li> <li>Press (just one click!) Enter button to confirm the 11.1V (3S)    battery configuration</li> <li>Charger should terminate automatically the charging when the battery is fully    charged</li> <li>Press Stop button to stop the charging</li> <li>Disconnect the charger from the platform when the battery is fully charged</li> </ol> <p>See the User Manual of the charger for more information on its configurations.</p>"},{"location":"content/electronics/power/#power-budget","title":"Power Budget","text":"<p>In terms of power budget, the modified platform considers different sensor configurations in terms of compatibility. As a result, the following power budgets are only examples for possible configurations that you may have in your modified platform.</p>"},{"location":"content/electronics/power/#2d-navigation-low-cost-2d-lasers","title":"2D Navigation (Low-cost 2D Lasers)","text":"<p>Total Power Budget handled by the LiPo Battery</p> Source Voltage (V) Current (A) Power (W) 4 x Faulhaber 2342 OEM DC motors 12V 4 x 1.1A 4 x 11W 1 x Arduino Mega 2560 12V 0.750A - <ul> <li>Power Consumption: 53W (estimated)</li> <li>Current Consumption: 4.8A @ 11.1VDC</li> <li>Autonomy: &gt; 2h05min</li> </ul> <p>Note</p> <ul> <li>Faulhaber 2342 OEM DC motors 1.1A and 11W are the rated current and power,   respectively (typically, given that robot carries a low load, should be   much less than 1.1A continuously)</li> <li>Arduino Mega 2560 current consumption was considered the maximum one   supported by the SPX1117M3-L-5-0/TR DC Regulator for the PWRIN power input   (750mA)</li> <li>LD19 | RPLIDAR C1 | RPLIDAR S2 | YDLIDAR X4: all connect to the computing   unit through USB connection, and the computing unit is powered by an   independent power source / power bank</li> </ul> <p>Total Power Budget handled by a 20000mAh 50W Power Bank for the Computing Unit</p> Source Voltage (V) Current (A) Power (W) 1 x LattePanda 3 Delta 15V 3A - <ul> <li>Power Consumption: 45W (estimated)</li> <li>Current Consumption: 3A @ 15VDC</li> <li>Autonomy: &gt; 6h40min</li> </ul> <p>Note</p> <ul> <li>LattePanda 3 Delta 3A is the current relative to its requirement in terms   of USB-C Power Delivery (PD) compliant power banks (3A @ 15VDC)</li> </ul>"},{"location":"content/electronics/power/#2d-navigation-ust-10lx","title":"2D Navigation (UST-10LX)","text":"<p>Total Power Budget handled by the LiPo Battery</p> Source Voltage (V) Current (A) Power (W) 4 x Faulhaber 2342 OEM DC motors 12V 4 x 1.1A 4 x 11W 1 x Arduino Mega 2560 12V 0.750A - 1 x Brainboxes SW-005 Ethernet Switch 5-30V - 1.1W 1 x Hokuyo UST-10LX 10-30V - 3.6W @ 24VDC <ul> <li>Power Consumption: 57.7W (estimated)</li> <li>Current Consumption: 5.2A @ 11.1VDC</li> <li>Autonomy: &gt; 1h55min</li> </ul> <p>Note</p> <ul> <li>Faulhaber 2342 OEM DC motors 1.1A and 11W are the rated current and power,   respectively (typically, given that robot carries a low load, should be   much less than 1.1A continuously)</li> <li>Arduino Mega 2560 current consumption was considered the maximum one   supported by the SPX1117M3-L-5-0/TR DC Regulator for the PWRIN power input   (750mA)</li> <li>Brainboxes SW-005 Ethernet Switch 1.1W is the maximum power drawn</li> <li>Hokuyo UST-10LX current consumption of 0.150A (equivalent to the 3.6W @   24VDC) is the nominal supply current</li> </ul> <p>Total Power Budget handled by a 20000mAh 50W Power Bank for the Computing Unit</p> Source Voltage (V) Current (A) Power (W) 1 x LattePanda 3 Delta 15V 3A - <ul> <li>Power Consumption: 45W (estimated)</li> <li>Current Consumption: 3A @ 15VDC</li> <li>Autonomy: &gt; 6h40min</li> </ul> <p>Note</p> <ul> <li>LattePanda 3 Delta 3A is the current relative to its requirement in terms   of USB-C Power Delivery (PD) compliant power banks (3A @ 15VDC)</li> </ul>"},{"location":"content/electronics/power/#3d-navigation-rs-helios-5515-ust-10lx","title":"3D Navigation (RS-HELIOS-5515, UST-10LX)","text":"<p>Total Power Budget handled by the LiPo Battery</p> Source Voltage (V) Current (A) Power (W) 4 x Faulhaber 2342 OEM DC motors 12V 4 x 1.1A 4 x 11W 1 x Arduino Mega 2560 12V 0.750A - 1 x Brainboxes SW-005 Ethernet Switch 5-30V - 1.1W 1 x Hokuyo UST-10LX 10-30V - 3.6W @ 24VDC 1 x RoboSense RS-HELIOS-5515 9-32V - 12W <ul> <li>Power Consumption: 69.7W (estimated)</li> <li>Current Consumption: 6.3A @ 11.1VDC</li> <li>Autonomy: &gt; 1h35min</li> </ul> <p>Note</p> <ul> <li>Faulhaber 2342 OEM DC motors 1.1A and 11W are the rated current and power,   respectively (typically, given that robot carries a low load, should be   much less than 1.1A continuously)</li> <li>Arduino Mega 2560 current consumption was considered the maximum one   supported by the SPX1117M3-L-5-0/TR DC Regulator for the PWRIN power input   (750mA)</li> <li>Brainboxes SW-005 Ethernet Switch 1.1W is the maximum power drawn</li> <li>Hokuyo UST-10LX current consumption of 0.150A (equivalent to the 3.6W @   24VDC) is the nominal supply current</li> <li>RoboSense RS-HELIOS-5515 12W is the typicall power drawn by the sensor</li> </ul> <p>Total Power Budget handled by a 20000mAh 50W Power Bank for the Computing Unit</p> Source Voltage (V) Current (A) Power (W) 1 x LattePanda 3 Delta 15V 3A - <ul> <li>Power Consumption: 45W (estimated)</li> <li>Current Consumption: 3A @ 15VDC</li> <li>Autonomy: &gt; 6h40min</li> </ul> <p>Note</p> <ul> <li>LattePanda 3 Delta 3A is the current relative to its requirement in terms   of USB-C Power Delivery (PD) compliant power banks (3A @ 15VDC)</li> </ul>"},{"location":"content/electronics/power/#2d-navigation-and-rgbd-perception-ust-10lx-l515","title":"2D Navigation and RGBD Perception (UST-10LX, L515)","text":"<p>Total Power Budget handled by the LiPo Battery</p> Source Voltage (V) Current (A) Power (W) 4 x Faulhaber 2342 OEM DC motors 12V 4 x 1.1A 4 x 11W 1 x Arduino Mega 2560 12V 0.750A - 1 x Brainboxes SW-005 Ethernet Switch 5-30V - 1.1W 1 x Hokuyo UST-10LX 10-30V - 3.6W @ 24VDC <ul> <li>Power Consumption: 57.7W (estimated)</li> <li>Current Consumption: 5.2A @ 11.1VDC</li> <li>Autonomy: &gt; 1h55min</li> </ul> <p>Note</p> <ul> <li>Faulhaber 2342 OEM DC motors 1.1A and 11W are the rated current and power,   respectively (typically, given that robot carries a low load, should be   much less than 1.1A continuously)</li> <li>Arduino Mega 2560 current consumption was considered the maximum one   supported by the SPX1117M3-L-5-0/TR DC Regulator for the PWRIN power input   (750mA)</li> <li>Brainboxes SW-005 Ethernet Switch 1.1W is the maximum power drawn</li> <li>Hokuyo UST-10LX current consumption of 0.150A (equivalent to the 3.6W at   24VDC) is the nominal supply current</li> </ul> <p>Total Power Budget handled by a 20000mAh 50W Power Bank for the Computing Unit</p> Source Voltage (V) Current (A) Power (W) 1 x LattePanda 3 Delta 15V 3A - 1 x Intel RealSense L515 5V - 3.3W <ul> <li>Power Consumption: 48.3W (estimated)</li> <li>Current Consumption: 3.2A @ 15VDC</li> <li>Autonomy: &gt; 6h15min</li> </ul> <p>Note</p> <ul> <li>LattePanda 3 Delta 3A is the current relative to its requirement in terms   of USB-C Power Delivery (PD) compliant power banks (3A @ 15VDC)</li> <li>Intel RealSense L515 3.3W is the estimated power consumption of the sensor   when in Depth (XGA) + RGB (1080p, 30FPS) operation mode</li> </ul>"},{"location":"content/electronics/schematic/","title":"Schematic","text":""},{"location":"content/electronics/schematic/#documents","title":"Documents","text":"<ul> <li>schematic.pdf</li> <li>schematic_easyeda.json</li> </ul>"},{"location":"content/sbc/","title":"Single Board Computer (SBC) Unit","text":"<p>The Single Board Computer (SBC) serves as the central computing unit of the modified Hangfa Discovery Q2 platform. This computing unit is responsible for communicating with the microcontroller via a serial port connection, executing Robot Operating System (ROS)-based nodes, and interfacing with external systems.</p> <p>While Raspberry Pi SBCs could have been a more cost-effective alternative to x86-based boards, they often face compatibility issues with certain libraries due to their ARM architecture - a limitation shared with Jetson boards. Additionally, Raspberry Pi boards may lack the necessary processing power for multimodal perception applications, even when only recording data.</p> <p>As a result, we opted for LattePanda SBCs, specifically, the LattePanda 3 Delta (used in our experiments) and LattePanda Sigma (a more powerful alternative) boards. This guide provides detailed, step-by-step instructions for intermediate and advance  on how to:</p> <ul> <li>Set up the SBCs (BIOS settings, power, storage, and display configuration)</li> <li>Install the operating system   (Ubuntu Focal Fossa 20.04 LTS)</li> <li>Install and configure the ROS framework   (ROS 1 Noetic Ninjemys and   ROS 2 Foxy Fitzroy)</li> <li>Configure remote desktop access</li> <li>Set up the development environment</li> <li>Firmware setup in terms of udev rules for peripheral management, and   installation and configuration of the advanced serial monitor application   CoolTerm</li> </ul> <p>Following these step-by-step instructions will ensure that you are capable of replicating our configuration in terms of computing unit, while may also give you additional ideas on how to improve it even further.</p>"},{"location":"content/sbc/dev/","title":"Development Environment","text":""},{"location":"content/sbc/dev/#doxygen","title":"Doxygen","text":"<pre><code>sudo apt update\nsudo apt install doxygen doxygen-doc doxygen-latex -y\n</code></pre>"},{"location":"content/sbc/dev/#visual-studio-code","title":"Visual Studio Code","text":""},{"location":"content/sbc/dev/#installation","title":"Installation","text":"<ol> <li>Download  Visual Studio Code    (available at    https://code.visualstudio.com/download)</li> <li>Execute the following commands     <pre><code>cd ~/Downloads/\nsudo apt install ./code_1.97.2-1739406807_amd64.deb -y\n</code></pre></li> </ol>"},{"location":"content/sbc/dev/#setup","title":"Setup","text":"<ol> <li>Open  Visual Studio Code<ul> <li>GNOME menu</li> <li>Terminal (<code>$ code</code> | <code>$ code .</code> to open the VS Code in the current   directory)</li> </ul> </li> <li> <p> Extensions    (Ctrl+Shift+X | File  Preferences     Extensions)</p> <ul> <li> ms-vscode.cpptools-extension-pack<ul> <li>ms-vscode.cpptools</li> <li>ms-vscode.cpptools-themes</li> <li>ms-vscode.cmake-tools</li> </ul> </li> <li> ms-python.python</li> <li> ms-python.debugpy</li> <li> ms-python.vscode-pylance</li> <li> cschlosser.doxdocgen</li> <li>  ms-iot.vscode-ros</li> <li>  redhat.vscode-xml</li> <li> redhat.vscode-yaml</li> <li> tomoki1207.pdf</li> <li> <p> platformio.platformio-ide</p> <p>Warning</p> <p>PlatformIO requires the Python Virtual Environment to be installed as well as possibly needing to have <code>python</code> as an alias to <code>python3</code> (https://docs.platformio.org/en/latest/faq/install-python.html).</p> <pre><code>sudo apt install python-is-python3 python3-venv -y\n</code></pre> </li> <li> <p> sdras.night-owl</p> </li> </ul> </li> <li> <p>User settings (Ctrl+Shift+P Preferences: Open User Settings (JSON))     settings.json<pre><code>{\n    \"editor.renderWhitespace\": \"none\",\n    \"editor.tabSize\": 2,\n    \"files.trimTrailingWhitespace\": true,\n    \"files.trimFinalNewlines\": true,\n    \"editor.rulers\": [\n        80, 120\n    ],\n    \"cmake.configureOnOpen\": false,\n    \"workbench.colorTheme\": \"Night Owl\",\n    \"explorer.confirmDragAndDrop\": false,\n    \"explorer.confirmDelete\": false,\n    \"terminal.integrated.stickyScroll.enabled\": false,\n    \"git.openRepositoryInParentFolders\": \"always\",\n    \"window.title\": \"${dirty}${rootName}\"\n}\n</code></pre></p> </li> </ol>"},{"location":"content/sbc/dev/#ssh-network-shared-folder","title":"SSH Network Shared Folder","text":"<ol> <li>Open  File Explorer (Super+E)</li> <li> Other Locations  Connect to Server<ul> <li>Connect to Server: <code>ssh://user@discoveryq2/home/user/</code></li> </ul> </li> </ol>"},{"location":"content/sbc/dev/#ssh-keys","title":"SSH Keys","text":"<ol> <li>Execute the following commands     <pre><code>ssh-keygen -t ed25519 -C \"discoveryq2@inesctec.pt\"\neval $(ssh-agent -s)\nssh-add .ssh/id_ed25519\n</code></pre></li> <li> <p>Copy the contents of your public key file     <pre><code>xclip -sel c &lt; ~/.ssh/id_ed25519.pub  # (1)!\ncat ~/.ssh/id_ed25519.pub\n</code></pre></p> <ol> <li>This command may not work when access your robot through a non graphical    interface.</li> </ol> </li> <li> <p>Sign in to GitLab</p> </li> <li>On the left sidebar, select your avatar</li> <li>Select Edit profile</li> <li>On the left sidebar, select SSH Keys</li> <li>Select Add new key</li> <li> <p>Verify that you can connect</p> <pre><code>ssh -T git@gitlab.inesctec.pt\n</code></pre> </li> </ol> <p>More information in https://docs.gitlab.com/user/ssh/.</p> <p>Tip</p> <p>In order to avoid setting up the <code>~/.ssh/config</code> file, you can use the same SSH key for different Git servers.</p>"},{"location":"content/sbc/fw/","title":"Firmware Setup","text":""},{"location":"content/sbc/fw/#device-rules-udev","title":"Device Rules (udev)","text":""},{"location":"content/sbc/fw/#platformio-devices","title":"PlatformIO Devices","text":"<pre><code>curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/system/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules\nsudo service udev restart\n</code></pre> <p>Source: https://docs.platformio.org/en/latest/core/installation/udev-rules.html#platformio-udev-rules.</p>"},{"location":"content/sbc/fw/#specific-device-rules","title":"Specific Device Rules","text":"<p>Tip</p> <p>Specific device rules allows to define a particular name for a certain device, allowing static naming when connection through serial port communication.</p> <p>In particularly with LattePanda SBCs, this feature is even more important to separate clearly which device is one (depending on the restart of the SBC with an Arduino or other device already plugged into the LattePanda, the onboard ATMega32 may be either <code>/dev/ttyACM0</code> or <code>/dev/ttyACM1</code>).</p> <p>Source: https://roboticsknowledgebase.com/wiki/tools/udev-rules/.</p> <ol> <li>Open  Visual Studio Code<ul> <li>GNOME menu</li> <li>Terminal (<code>$ code</code> | <code>$ code .</code> to open the VS Code in the current   directory)</li> </ul> </li> <li> <p>Open  PlatformIO extension</p> <ul> <li>PIO Home  Devices<ul> <li><code>/dev/ttyACM0</code><ul> <li>Description: <code>LattePanda Leonardo</code></li> <li>Hardware: <code>USB VID:PID=3343:803A LOCATION=1-5:1.0</code></li> </ul> </li> <li><code>/dev/ttyACM1</code><ul> <li>Description: <code>ttyACM1</code></li> <li>Hardware: <code>USB VID:PID=2341:0042 SER=9593132393135171D1E2 LOCATION=1-2:1.0</code></li> </ul> </li> </ul> </li> </ul> <p>Tip</p> <p>Another way to check the previous information is directly through terminal commands:</p> <pre><code>udevadm info -a -n /dev/ttyACM0\nudevadm info -a -n /dev/ttyACM1\n</code></pre> </li> <li> <p>Execute the following commands</p> <pre><code>sudo touch /etc/udev/rules.d/99-usb-serial.rules\nsudo tee /etc/udev/rules.d/99-usb-serial.rules &lt;&lt;EOF\n# LattePanda Leonardo (ATMega32 onboard of the SBC)\nSUBSYSTEM==\"tty\", ATTRS{idVendor}==\"3343\", ATTRS{idProduct}==\"803a\", SYMLINK+=\"ttyLattePandaATMega\"\n\n# Arduino Mega\nSUBSYSTEM==\"tty\", ATTRS{idVendor}==\"2341\", ATTRS{idProduct}==\"0042\", SYMLINK+=\"ttyArduinoMega\"\n\nEOF\n</code></pre> </li> </ol>"},{"location":"content/sbc/fw/#coolterm","title":"CoolTerm","text":"<p>Tip</p> <p>CoolTerm is a more advanced serial monitor with an User Interface (UI), compared to the native serial monitor implementation of PlatformIO.</p> <ol> <li>Download CoolTerm (available at    https://freeware.the-meiers.org/)</li> <li>Execute the following commands     <pre><code>mkdir ~/dev/tools -p\nmv ~/Downloads/CoolTermLinux64Bit.zip ~/dev/tools/\n\ncd ~/dev/tools/\nunzip CoolTermLinux64Bit.zip\n</code></pre></li> <li>Open CoolTerm     <pre><code>cd ~/\n./dev/tools/CoolTermLinux64Bit/CoolTerm\n</code></pre></li> <li>Connection  Options<ul> <li>Serial Port<ul> <li>Port: <code>/dev/ttyACM1</code> (note that LattePanda SBCs comes with ATMega32)</li> <li>Baudrate: <code>115200</code> (check in your code the serial port's baud rate)</li> <li>Data bits: <code>8</code></li> <li>Parity: <code>None</code></li> <li>Stop bits: <code>1</code></li> </ul> </li> <li> <p>Receive</p> <ul> <li>Enable Direct RX update of text display</li> <li> <p>Enable Add timestamps to received data</p> <p>Tip</p> <p>Enabling timestamps may be useful to check the cycle time period.</p> </li> <li> <p>Set Type to Time + Milliseconds</p> </li> </ul> </li> </ul> </li> </ol>"},{"location":"content/sbc/lattepanda-3-delta/","title":"LattePanda 3 Delta","text":""},{"location":"content/sbc/lattepanda-3-delta/#links","title":"Links","text":"<ul> <li>LattePanda 3 Delta</li> <li>LattePanda 3 Delta Specification</li> <li>Pinout and Hardware Diagram</li> <li>Initial Setup of the 3 Delta by LattePanda</li> <li>LattePanda 3 Delta 3D Model</li> </ul>"},{"location":"content/sbc/lattepanda-3-delta/#specifications","title":"Specifications","text":"Content Specs. Processor Intel\u00ae Celeron\u00ae Processor N5105 (Frequency: 2.00GHz ~ 2.90GHz) Graphics Intel\u00ae UHD Graphics (Frequency: 450MHz ~ 800MHz) Memory 8GB LPDDR4 2933MHz Storage 64GB eMMC V5.1 Wireless Intel\u00ae AX201 WiFi 6 (802.11ax), 2.4GHz and 5GHz (160MHz) Supported; Bluetooth\u00ae 5.2 Ethernet Intel\u00ae I211-AT / I225-V PCIe Gigabit LAN, Wake-On-LAN Supported Video HDMI 2.0b; DP 1.4 via USB Type-C; eDP 30Pin (two lanes) Audio Microphone + Headphone Combo Connector USB 1x USB 3.2 gen 2 Type-A; 2x USB 3.2 gen1 Type-A; 1x USB 2.0 Type-C Expansion Slots M.2 Key B(2242/2252/2280): SATA III, USB2.0, USB3.0, SIM; M.2 Key M(2280): PCIe 3.0 x2; Micro-SD + Micro-SIM Combo Card Connector Coprocessor Microchip\u00ae ATmega32U4-MU GPIO Female Headers Atmega32U4 Pinout; BIOS Flash Pinout; 5V &amp; 3.3V Output; 12V DC Input; USB 2.0; RS232; Audio; Status Control &amp; Indication TPM Built-in TPM (2.0) BIOS Function Auto Power On, Watchdog Timer, Serial Port Redirection, etc. Power PH2.0-4Pin DC Input: 12V; USB Type-C PD Input: 15V DC RTC CR927 3V Dimension 125mm x 78mm x16mm Default Built-in OS Windows 10 Pro 21H2; Windows 10 IoT Enterprise 2021 LTSC Compatible OS Windows 10, Windows 11, Ubuntu Environment Operating Temperature: 0~60\u2103; Relative Humidity: 0%~80% Certification CE, FCC, KC, RoHS"},{"location":"content/sbc/lattepanda-3-delta/#initial-setup","title":"Initial Setup","text":"<p>Preparations</p> <ul> <li>         HDMI Cable</li> <li>            External HDMI Monitor</li> <li>           Keyboard and a Mouse</li> <li> Power Adapter</li> <li>            Pair of WIFI/BT antennas<ul> <li>Antennas that come in the box</li> <li>Bingfu Antena WiFi Dual Band RP-SMA 25cm U.FL IPX IPEX MHF4 M.2 NGFF Intel</li> </ul> </li> </ul> <p>WiFi Antenna Interface</p> <p>WiFi card on the LattePanda 3 Delta is not a traditional one as you see in desktops (the connector is different: IPEX4 2.4 &amp; 5G Dual-band).</p> <p>Instructions</p> <ol> <li>Attach the Wi-Fi/BT antennas to the sockets</li> <li>Connect an HDMI display</li> <li>Connect the keyboard and mouse to the LattePanda 3 Delta</li> <li>Connect the power adapter provided in the SBC's box</li> <li>Press the power button and the blue LED indicator will light up<ul> <li>Default OS is Windows 10 </li> </ul> </li> </ol>"},{"location":"content/sbc/lattepanda-3-delta/#bios-setup","title":"BIOS Setup","text":""},{"location":"content/sbc/lattepanda-3-delta/#entering-bios","title":"Entering BIOS","text":"<p>Default</p> <ol> <li>Power on or reboot LattePanda</li> <li>Press Del or Esc key continuously to    enter into BIOS menu before you see the LattePanda logo on the splash screen</li> </ol> <p>Windows 10</p> <ol> <li>Start Menu      Press Shift + Restart</li> <li>Choose  Troubleshoot  Advanced Options     UEFI Firmware Settings     Restart</li> </ol>"},{"location":"content/sbc/lattepanda-3-delta/#auto-power-on","title":"Auto Power-on","text":"<ol> <li>Power on the LattePanda and enter the BIOS</li> <li>BIOS Setup  Advanced     Power Management  ACPowerLoss     Set the ACPowerLoss option to <code>PowerOn</code></li> <li>Save &amp; Exit (Press F4)</li> </ol>"},{"location":"content/sbc/lattepanda-3-delta/#power","title":"Power","text":"<ul> <li> USB Type-C Power Delivery(PD)<ul> <li>Power adapter provided in the box</li> <li>Powerbank Xiaomi Mi 50W 20000mAh (portable solution to have onboard the robot)</li> </ul> </li> </ul> <p>Tip</p> <p>Using a powerbank instead of using the JST PH2.0-4Pin input connector provides an electrically isolated power option from the robot's LiPo battery for powering the SBC.</p>"},{"location":"content/sbc/lattepanda-3-delta/#storage","title":"Storage","text":"<ul> <li> 64GB eMMC V5.1 (internal)</li> <li> Crucial P3 500 GB M.2 PCIe Gen3 NVMe SSD CT500P3SSD8 (M.2 Key-M)</li> </ul>"},{"location":"content/sbc/lattepanda-3-delta/#display-connections","title":"Display Connections","text":"<ul> <li> HDMI Dummy Plug (remote connection w/ graphical interface wo/ monitor)</li> </ul>"},{"location":"content/sbc/lattepanda-sigma/","title":"LattePanda Sigma","text":""},{"location":"content/sbc/lattepanda-sigma/#links","title":"Links","text":"<ul> <li>LattePanda Sigma</li> <li>LattePanda Specification</li> <li>Pinout and Hardware Diagram</li> <li>Initial Setup of the Sigma by LattePanda</li> <li>LattePanda Sigma 3D Model</li> </ul>"},{"location":"content/sbc/lattepanda-sigma/#specifications","title":"Specifications","text":"Component Content Specs. Processor CPU Intel\u00ae Core\u2122 i5-1340P Cores / Threads 12C(4P+8E) / 16T Max Turbo Frequency 4.60 GHz(Performance-core), 3.4 GHz(Efficient-core) L2 Cache 12 MB Base Power 28 W  (BIOS Default: PL1 45W, PL2 64W) Graphics Intel\u00ae Iris\u00ae Xe Graphics Max Dynamic Frequency 1.45 GHz Execution Units 80 Co-processor Microchip\u00ae ATmega32U4-MU Memory Technology Dual-Channel, Samsung LPDDR5-6400(16GB), LPDDR5-6000(32GB) Capacity 16GB\uff0c32GB Storage Drive Form Factor M.2 SSD (NVMe/SATA), SATA Drive Wireless Wireless Form Factor M.2 Wireless Module (PCIe/CNVio) Display HDMI Port HDMI 2.1, Up to 4096 x 2304 @ 60Hz USB Type-C Port DP 1.4a, Up to 7680 x 4320 @ 60Hz (One Monitor) eDP(Embedded Display Port) eDP 1.4b, 4 Lanes, Up to 4096 x 2304 @ 120Hz External I/O USB Type-A 2 x USB2.0 (480Mbps), 2 x USB3.2 Gen 2 (10Gbps) USB Type-C 2 x Thunderbolt\u2122 4 (40Gbps) HDMI HDMI 2.1 Ethernet 2 x 2.5GbE RJ45 Ports (Intel\u00ae i225-V Gigabit Ethernet Controller, Supports 10/100/1000/2500 Mbps, WOL) Power 5.5mm x 2.5mm DC Jack Audio 3.5mm Microphone Headphone Combo Connector Sim Card Micro Sim Card Slot Internal I/O USB 2.0 2.0mm Pitch 4-Pin Connector, 480Mbps Fan 1.27mm Pitch,12V 4-Wire Fan Connector, PWM Control SATA SATA 6.0 Gb/s Data Connector, 2.0mm Pitch 4-Pin Power Connector Front Panel 2.54mm Pitch 9-Pin Header, Supports Power, Reset, Power LED, HDD LED Front Audio Panel 2.54mm Pitch 9-Pin Header, Supports High Definition Audio (HD), Line-Out, Mic-in COM 2.54mm Pitch 9-Pin Header,Supports RS232, RS485 GPIO 2.54mm Pitch 34-Pin Header, Including ATmega32U4 I/O Pins, 5V Power Pins, S0/S3/S4 State Pins eDP 0.5mm Pitch 40-Pin Connector, 4 Lanes Expansion Slot M.2 M Key Type 2280, Supports PCIe 3.0 x4Type 2280, Supports PCIe 4.0 x4 M.2 B Key Type 2242/2252/2280, Supports SATA III/PCIe 3.0 x1, USB2.0, USB3.0, SIM M.2 E Key Type 2230, Supports PCIe 3.0 x1,USB2.0, Intel CNVio Security TPM Processor's Built-in TPM (2.0) Power Power Input 5.5mm x 2.1mm DC Jack: DC 12~20V USB Type C: PD 20V Attached Power Adapter 19V DC, 4.74A, 90W RTC Battery CR1220 Battery Holder: 3V 1.27mm Pitch 2-Pin Connector: 3V Operating System Microsoft Windows Windows 10, Windows 11 Linux Ubuntu, Promox VE, etc. Environment Operating Temperature 0~45\u2103 Relative Humidity 0%~80%RH Dimension Form Factor 3.5\", 146 x 102 mm Model(SKU) DFR1080 LattePanda Sigma (16GB RAM, no SSD, no WiFi) DFR1081 LattePanda Sigma (16GB RAM, 500GB PCIe 4.0 x4 NVMe SSD, Intel AX211 WiFi6E) DFR1090 LattePanda Sigma (32GB RAM, no SSD, no WiFi) DFR1091 LattePanda Sigma (32GB RAM, 500GB PCIe 4.0 x4 NVMe SSD, Intel AX211 WiFi6E) Compliance Certification CE, FCC, KC, RoHS"},{"location":"content/sbc/lattepanda-sigma/#initial-setup","title":"Initial Setup","text":"<ul> <li> M.2 NVMe SSD</li> <li>            HDMI Cable</li> <li>               External HDMI Monitor</li> <li>              Keyboard and a Mouse</li> <li>    Power Adapter</li> <li>               M.2 Wireless Network Model with WIFI/BT antennas<ul> <li>M.2 (A+E Key) AX210 WiFi 6E Network Card for LattePanda Sigma, Alpha, Delta</li> </ul> </li> </ul> <p>Instructions</p> <ol> <li>Connect an M.2 NVMe SSD to the M.2 Key-M socket</li> <li>Install a compatible M.2 wireless network card<ul> <li>Intel AX210</li> <li>Intel AX211 (included in the LattePanda Sigma 32GB bundle DFR1091)</li> <li>Intel AX200</li> <li>Intel AX201</li> <li>Intel AC9560</li> <li>Intel AC8265</li> </ul> </li> <li>(optional) Install the LattePanda Sigma into a case<ul> <li>Aluminum Case for LattePanda Sigma Single Board Computer</li> <li>Vertical M.2 Expansion Support Case in Aluminum Alloy</li> </ul> </li> <li>Connect an HDMI display</li> <li>Connect the keyboard and mouse to the LattePanda 3 Delta</li> <li>Connect the power adapter provided in the SBC's box</li> <li>Press the power button and the blue LED indicator will light up<ul> <li>Default OS is Windows 10 </li> </ul> </li> </ol> <p>Warning</p> <p>This SBC appears to not have a working wireless connection in Ubuntu 20.04.6 LTS due to missing drivers for the Intel AX211 M.2 wireless network card.</p> <p>An alternative is using a TP-Link WiFi USB, where you only have to install the following drivers: <pre><code>sudo apt update\nsudo apt dist-upgrade\nsudo apt install linux-headers-$(uname -r) build-essential git\n\nmkdir ~/dev/tools/ -p\n\ncd ~/dev/tools/\ngit clone https://github.com/lwfinger/rtw88\n\ncd rtw88\nmake\nsudo make install\nsudo make install_fw\n</code></pre></p>"},{"location":"content/sbc/lattepanda-sigma/#bios-setup","title":"BIOS Setup","text":""},{"location":"content/sbc/lattepanda-sigma/#entering-bios","title":"Entering BIOS","text":"<p>Default</p> <ol> <li>Power on or reboot LattePanda</li> <li>Press Del or Esc key continuously to    enter into BIOS menu before you see the LattePanda logo on the splash screen</li> </ol> <p>Windows 10</p> <ol> <li>Start Menu      Press Shift + Restart</li> <li>Choose  Troubleshoot  Advanced Options     UEFI Firmware Settings     Restart</li> </ol>"},{"location":"content/sbc/lattepanda-sigma/#auto-power-on","title":"Auto Power-on","text":"<ol> <li>Power on the LattePanda and enter the BIOS</li> <li>BIOS Setup  Advanced     Power Management  ACPowerLoss     Set the ACPowerLoss option to <code>PowerOn</code></li> <li>Save &amp; Exit (Press F4)</li> </ol>"},{"location":"content/sbc/lattepanda-sigma/#configurable-tdp","title":"Configurable TDP","text":"<ol> <li>Power on the LattePanda and enter the BIOS</li> <li>BIOS Setup  Advanced     CPU Power &amp; Performance  CPU - Power Management Control     Config TDP Configurations     Change the Configurable TDP Boot Mode option</li> </ol> TDP Boot Mode Base (W) PL1 (W) PL2 (W) Ratio TAR Nominal 28W 45W 64W 19 18 Level 1 20W 20W 20W 14 13 Level 2 3W 35W 64W 22 21 <p>(default values set in BIOS)</p> <ul> <li>PL: Power Limit</li> <li>TAR: Turbo Activation Ratio (can be overwritten)</li> </ul>"},{"location":"content/sbc/lattepanda-sigma/#power","title":"Power","text":"<ul> <li> USB Type-C Power Delivery(PD)<ul> <li>Power adapter provided in the box</li> <li>UGREEN Nexode Power Bank 100W 20000mAh   (portable solution to have onboard the robot)</li> </ul> </li> </ul> <p>Tip</p> <p>Using a powerbank instead of using the JST PH2.0-8Pin input connector provides an electrically isolated power option from the robot's LiPo battery for powering the SBC.</p>"},{"location":"content/sbc/lattepanda-sigma/#storage","title":"Storage","text":"<ul> <li> Crucial P3 500 GB M.2 PCIe Gen3 NVMe SSD CT500P3SSD8 (M.2 Key-M)</li> </ul>"},{"location":"content/sbc/lattepanda-sigma/#display-connections","title":"Display Connections","text":"<ul> <li> HDMI Dummy Plug (remote connection w/ graphical interface wo/ monitor)</li> </ul>"},{"location":"content/sbc/os/","title":"Operating System (OS)","text":""},{"location":"content/sbc/os/#linux-distributions","title":"Linux Distributions","text":"<p>The modifield Hangfa Discovery Q2 platform by INESC TEC uses the Robot Operating System (ROS) set of software libraries to facilitate the development of robot-oriented applications. As a result of using ROS, you should take attention to the compatibility of the Linux distributions with specific ROS versions. The following list provides a summary on the Linux compatibility with ROS:</p> <ul> <li>ROS 1<ul> <li>ROS Noetic Ninjemys (EOL: May, 2025)<ul> <li>Ubuntu Focal Fossa 20.04 LTS   [amd64] [arm64|armhf]</li> <li>Debian Buster   [amd64|arm64]</li> </ul> </li> </ul> </li> <li>ROS 2<ul> <li>ROS 2 Foxy Fitzroy (EOL: June, 2023)<ul> <li>Ubuntu Focal Fossa 20.04 LTS   [amd64] [arm64]</li> </ul> </li> <li>ROS 2 Humble Hawksbill (EOL: May, 2027)<ul> <li>Ubuntu Jammy Jellyfish 22.04 LTS   [amd64] [arm64]</li> </ul> </li> <li>ROS 2 Jazzy Jalisco (EOL: May, 2029)<ul> <li>Ubuntu Noble Numbat 24.04 LTS   [amd64] [arm64]</li> </ul> </li> </ul> </li> </ul> <p>Still, the remaining of the Operating System tutorial will focus on Ubuntu Focal Fossa 20.04 LTS due to its compatibility with both ROS 1 and ROS 2 versions.</p>"},{"location":"content/sbc/os/#create-bootable-usb","title":"Create Bootable USB","text":""},{"location":"content/sbc/os/#rufus-windows","title":"Rufus (Windows)","text":"<ol> <li>Download and install Rufus</li> <li>Download the Ubuntu Focal Fossa 20.04 LTS image file</li> <li>Select your  USB stick for the Device option</li> <li>Select the  Ubuntu image file for the Boot selection option</li> <li>(optional) Disable quick format and/or Enable check device for bad blocks</li> <li>Press the Start button</li> </ol>"},{"location":"content/sbc/os/#linux","title":"Linux","text":"<ol> <li>Open the Make Startup Disk application</li> <li>Select the  Ubuntu image file for the CD-Drive/Image option</li> <li>Select your  USB stick for the Device option</li> <li>Make Startup Disk</li> </ol>"},{"location":"content/sbc/os/#installation","title":"Installation","text":"<ol> <li> Power on or reboot the Single Board Computer (SBC)</li> <li>Press Del or Esc key continuously (for LattePanda SBCs) to    enter into BIOS menu</li> <li>BIOS Setup  Boot  Select the    USB drive as the first boot option</li> <li>Save the changes and exit the boot screen</li> <li>Select Install Ubuntu</li> <li>Language     </li> <li>Keyboard layout     </li> <li>Select Minimal installation, and enable    Download updates while installing Ubuntu and    Install third-party software for graphics and Wi-Fi hardware </li> <li> <p>Select Something else to create and resize partitions yourselft     </p> <ul> <li>Remove all pre-existing partitions     </li> <li> <p>SSD (<code>/dev/nvme0n1</code>)</p> <ul> <li> <p>512MB EFI System Partition</p> <p></p> </li> <li> <p>8192MB swap area</p> <p></p> </li> <li> <p><code>/</code> root (remaining of the disk free available size)</p> <p></p> </li> </ul> </li> <li> <p>eMMC (<code>/dev/mmcblk2</code>)</p> <ul> <li> <p><code>/media/data</code> partition</p> <p></p> </li> </ul> <p>Tip</p> <p>SSD is set as the boot loader and to have the OS's root partition due to being faster that eMMC memory. As a result, the latter can be used as additional data storage, following the preivous steps.</p> </li> <li> <p>Final partition scheme</p> <p></p> <p></p> </li> <li> <p>Confirm disk changes</p> <p></p> </li> </ul> </li> <li> <p>Timezone     </p> </li> <li> <p>User and computer information settings     </p> <p>Warning</p> <p>If you have more than 1 robot, it is advisable for you to use different computer's name for network discoverability purposes and alias definitions.</p> <p>Tip</p> <p>Use user as the username for all your robots to facilite when connecting remotely to the robot (e.g., <code>ssh user@&lt;robot_name&gt;</code>, assuming that <code>&lt;robot_name&gt;</code> is defined as a valid network alias).</p> </li> <li> <p>Press Continue to finish the installation of the OS</p> </li> <li>Reboot the Single Board Computer (SBC)</li> </ol>"},{"location":"content/sbc/os/#setup","title":"Setup","text":""},{"location":"content/sbc/os/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ol> <li>Open Settings<ul> <li>Task Bar   Settings</li> <li>Dock   Show Applications     Settings</li> </ul> </li> <li> Privacy   Screen Lock<ul> <li>Set Blank Screen Delay to Never</li> <li>Disable Automatic Screen Lock</li> </ul> </li> <li> Power<ul> <li>Set Power Saving: Blank Screen to Never</li> </ul> </li> <li> Keyboard Shortcuts<ul> <li>Home folder: Super+E</li> </ul> </li> </ol>"},{"location":"content/sbc/os/#file-explorer","title":"File Explorer","text":"<ol> <li>Open  File Explorer (Super+E)</li> <li>Open the  Menu  Preferences</li> <li>Views  Enable List View: Allow folders to be expanded</li> </ol>"},{"location":"content/sbc/os/#getting-started","title":"Getting Started","text":"<pre><code>sudo apt update\nsudo apt dist-upgrade\n\nsudo apt install build-essential git net-tools nmap terminator vim xclip\n</code></pre>"},{"location":"content/sbc/remote/","title":"Remote Access","text":"<p>Tip</p> <p>If you want to have a remote graphical output without having a monitor connected to the SBC (AnyDesk, RustDesk, Remmina w/ VNC), use the HDMI Dummy Plug.</p>"},{"location":"content/sbc/remote/#anydesk","title":"AnyDesk","text":"<ol> <li>Download AnyDesk (available at    https://anydesk.com/en/downloads/linux)</li> <li>Execute the following commands     <pre><code>cd ~/Downloads/\nsudo apt update\nsudo apt install ./anydesk_6.4.2-1_amd64.deb -y\n</code></pre></li> <li>Open AnyDesk</li> <li>(optional) Set an alias to use it for remote access instead of the    AnyDesk ID</li> <li>Open the  Menu   Settings<ul> <li> Security   Unlock<ul> <li>Enable unattended access:<ul> <li>Set a password</li> <li>Set Full Access for the permission profile</li> </ul> </li> <li>(optional) Disable Search local network for other AnyDesk clients</li> <li>(optional) Enable Exclude this device from discovery</li> </ul> </li> <li>(optional)  Display<ul> <li>Set Best performance in the quality</li> <li>Set Optimize screen usage (strecht) in view mode</li> </ul> </li> </ul> </li> </ol> <p>Tip</p> <p>If you are having problems connecting to another computer through AnyDesk, try to remove the local cache folder.</p> <pre><code>ll ~/.anydesk/\nrm -rf ~/.anydesk/\n</code></pre> <p>Warning</p> <p>AnyDesk requires both remote access endpoints to have Internet connection.</p> <p>Warning</p> <p>Some IT managers may lock the remote access through AnyDesk by disabling connections through <code>*.net.anydesk.com</code>, even if both endpoints have an Internet connection. More information in https://support.anydesk.com/knowledge/firewall.</p>"},{"location":"content/sbc/remote/#rustdesk","title":"RustDesk","text":"<ol> <li>Download RustDesk (available at    https://github.com/rustdesk/rustdesk/releases/)</li> <li>Execute the following commands     <pre><code>cd ~/Downloads/\nsudo apt update\nsudo apt install ./rustdesk-1.3.7-x86_64.deb -y\n</code></pre></li> <li>Open RustDesk</li> <li>Open the  Menu   Settings:<ul> <li> Security   Unlock   Security Settings<ul> <li>Use permanent password</li> <li>(optional) Deny LAN discovery</li> <li>(optional) Enable direct IP access  Define   the Port (e.g., <code>21118</code>)</li> </ul> </li> <li>(optional)  Display<ul> <li>Set Scale adaptive</li> <li>Set Optimize reaction time</li> <li>Other default options<ul> <li> Show monitors in toolbar</li> <li> Enable file copy and paste</li> <li> Use all my displays for the remote session</li> </ul> </li> </ul> </li> </ul> </li> </ol> <p>Tip</p> <p>RustDesk is an open-source remote access software as an alternative to AnyDesk and similiar applications, allowing your own self-hosted servers and direct IP access to your machine.</p> <p>Warning</p> <p>Direct IP access through RustDesk remote connection is unecrypted!</p>"},{"location":"content/sbc/remote/#remmina","title":"Remmina","text":"<ol> <li>Execute the following commands     <pre><code>sudo apt install remmina remmina-plugin-rdp remmina-plugin-vnc -y\nsudo apt install vino -y\n</code></pre></li> <li>Open  Settings   Sharing  Enable    Screen Sharing</li> <li>Open Remmina on the client side</li> <li>Open a VNC connection with the address    <code>&lt;computer name&gt;.local</code> or <code>&lt;IP address&gt;</code></li> </ol>"},{"location":"content/sbc/remote/#secure-shell-ssh","title":"Secure Shell (SSH)","text":"<pre><code># SBC onboard the robot\nsudo apt install openssh-server\n\n# Remote access PC\nsudo apt install openssh-client\n\nssh user@&lt;IP address&gt;\n</code></pre> <p>Warning</p> <p>SSH 22 default port must be open in your network's firewall settings.</p>"},{"location":"content/sbc/remote/#zerotier","title":"ZeroTier","text":"<ol> <li>Execute the following commands     <pre><code>curl -s 'https://raw.githubusercontent.com/zerotier/ZeroTierOne/main/doc/contact%40zerotier.com.gpg' | gpg --import &amp;&amp; if z=$(curl -s 'https://install.zerotier.com/' | gpg); then echo \"$z\" | sudo bash; fi\n\nsudo zerotier-cli info\n</code></pre></li> <li>Go to https://my.zerotier.com/  Create A Network<ul> <li>Enable Auto-Assign from Range for the IPv4 Auto-Assign</li> <li>Enable Broadcast for Multicast</li> </ul> </li> <li>Execute the following commands     <pre><code>sudo zerotier-cli join &lt;Network ID&gt;\n</code></pre></li> <li>Go to https://my.zerotier.com/  Access the network previously created     Authorize the new device</li> <li> <p>Execute the following commands     <pre><code>ifconfig  # (1)!\n</code></pre></p> <ol> <li>should appear a new network interface specific to ZeroTier with an    auto-assigned STATIC IP address</li> </ol> </li> <li> <p>Execute remote access through VNC, SSH, or another method that allows IP    direct access using the ZeroTier IP address</p> <p>Warning</p> <p>Both devices should be added in your private ZeroTier network</p> </li> </ol>"},{"location":"content/sbc/ros-1_noetic/","title":"ROS 1 Noetic Ninjemys","text":""},{"location":"content/sbc/ros-1_noetic/#links","title":"Links","text":"<ul> <li>ROS Noetic Ninjemys (EOL: May, 2025)</li> <li>ROS Official Tutorials</li> <li>Unix Tutorial for Beginners</li> <li>ROS Courses</li> </ul>"},{"location":"content/sbc/ros-1_noetic/#installation","title":"Installation","text":"<pre><code>sudo apt update\nsudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" &gt; /etc/apt/sources.list.d/ros-latest.list'\nsudo apt install curl -y\ncurl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | sudo apt-key add -\nsudo apt update\nsudo apt install ros-noetic-desktop-full -y\nsource /opt/ros/noetic/setup.bash\nsudo apt install python3-rosdep python3-rosinstall python3-rosinstall-generator python3-wstool build-essential -y\nsudo rosdep init\nrosdep update\n</code></pre> <p>See https://wiki.ros.org/noetic/Installation/Ubuntu for further details on the ROS installation instructions.</p> <p>In order to test if the installation was successful, run the following code:</p> <pre><code>source /opt/ros/noetic/setup.bash\nroslaunch roscpp_tutorials talker_listener.launch\n</code></pre>"},{"location":"content/sbc/ros-1_noetic/#configuration-of-the-ros-environment","title":"Configuration of the ROS Environment","text":"<pre><code>source /opt/ros/noetic/setup.bash\n\nmkdir ~/ros1_ws/src -p\n\ncd ~/ros1_ws/src/\ncatkin_init_workspace .\n\ncd ..\ncatkin_make --force-cmake -DCMAKE_BUILD_TYPE=&lt;Debug|Release|RelWithDebInfo|MinSizeRel&gt;\n\nsource devel/setup.bash\n\ncat &lt;&lt;EOF &gt;&gt; ~/.bashrc\n\n## ROBOT OPERATING SYSTEM (ROS) 1 NOETIC\nwsros1dir()\n{\n  source devel/setup.bash\n}\nalias wsros1='source /opt/ros/noetic/setup.bash &amp;&amp; source ${HOME}/ros1_ws/devel/setup.bash'\nEOF\n</code></pre>"},{"location":"content/sbc/ros-1_noetic/#network-setup","title":"Network Setup","text":"<p>Tip</p> <p>Use ZeroTier (see Remote Access) to create a private network link between your computer and the robots' computing units.</p> <p>Requirements</p> <ul> <li>IP address of your computer</li> <li>IP address of the robot's computing unit</li> </ul> <p>Tip</p> <p>Ideally, both IP addresses should remain static (another advantage of using ZeroTier for that effect).</p> <p>How To</p> <ol> <li>Add your IP address and hostname to the <code>/etc/hosts</code> file in robot's    computing unit     <pre><code>user@discoveryq2:~$ cat /etc/hosts\n127.0.0.1           localhost\n127.0.1.1           &lt;ROBOT HOSTNAME&gt;\n&lt;YOUR IP ADDRESS&gt;   &lt;YOUR HOSTNAME&gt;\n...\n</code></pre></li> <li>Add the robot's computing unit IP address and hostname to the <code>/etc/hosts</code>    file in your computer     <pre><code>&lt;YOUR USERNAME&gt;@&lt;YOUR HOSTNAME&gt;:~$ cat /etc/hosts\n127.0.0.1           localhost\n127.0.1.1           &lt;YOUR HOSTNAME&gt;\n&lt;ROBOT ADDRESS&gt;     &lt;ROBOT HOSTNAME&gt;\n...\n</code></pre></li> <li>Test if the naming resolve setup is working correctly     <pre><code>user@discoveryq2:~$ ping &lt;YOUR HOSTNAME&gt;\n</code></pre> <pre><code>&lt;YOUR USERNAME&gt;@&lt;YOUR HOSTNAME&gt;:~$ ping &lt;ROBOT HOSTNAME&gt;\n</code></pre></li> <li>Launch nodes in the robot's local computing unit</li> <li>Execute the following commands in your computer     <pre><code>export ROS_MASTER_URI=http://&lt;ROBOT HOSTNAME&gt;:11311\nrosnode list\n</code></pre></li> <li>Now, you can remotely execute additional nodes such as rviz to see data    published by nodes running on the robot, debug, among other use cases</li> </ol> <p>More information available in https://wiki.ros.org/ROS/NetworkSetup.</p>"},{"location":"content/sbc/ros-2_foxy/","title":"ROS 2 Foxy Fitzroy","text":""},{"location":"content/sbc/ros-2_foxy/#links","title":"Links","text":"<ul> <li>ROS 2 Foxy Fitzroy (EOL: June, 2023)</li> <li>ROS 2 Foxy Official Tutorials</li> <li>Unix Tutorial for Beginners</li> <li>Programming for Robotics - ROS - RSL@ETHZ</li> </ul>"},{"location":"content/sbc/ros-2_foxy/#installation","title":"Installation","text":"<pre><code>sudo apt update &amp;&amp; sudo apt install locales -y\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\nlocale\nsudo apt install software-properties-common -y\nsudo add-apt-repository universe -y\nsudo apt update &amp;&amp; sudo apt install curl -y\nsudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\nsudo apt update\nsudo apt install ros-foxy-desktop python3-argcomplete ros-dev-tools -y\n</code></pre> <p>See https://docs.ros.org/en/foxy/Installation/Ubuntu-Install-Debians.html for further details on the ROS 2 Foxy installation instructions.</p> <p>In order to test if the installation was successful, run the following code:</p> <pre><code>source /opt/ros/foxy/setup.bash\nros2 launch demo_nodes_cpp talker_listener.launch.xml\n</code></pre>"},{"location":"content/sbc/ros-2_foxy/#configuration-of-the-ros-environment","title":"Configuration of the ROS Environment","text":"<pre><code>source /opt/ros/foxy/setup.bash\n\nmkdir ~/ros2_ws/src -p\n\ncd ~/ros2_ws\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=&lt;Debug|Release|RelWithDebInfo|MinSizeRel&gt; --event-handlers summary+ status+ console_cohesion+ console_direct+ console_start_end+ console_stderr+\n\nsource install/setup.bash\n\ncat &lt;&lt;EOF &gt;&gt; ~/.bashrc\n\n## ROBOT OPERATING SYSTEM (ROS) 2 FOXY\nwsros2dir()\n{\n  source install/setup.bash\n}\nalias wsros2='source /opt/ros/foxy/setup.bash &amp;&amp; source ${HOME}/ros2_ws/install/setup.bash'\nEOF\n</code></pre>"},{"location":"content/sensors/","title":"Sensors","text":"<p>TBC</p>"},{"location":"content/sensors/imu/","title":"Inertial Measurement Units (IMUs)","text":"<p>TBC</p>"},{"location":"content/sensors/lidar2d/","title":"2D Laser Scanners","text":"Specs Hokuyo UST-10LX LDROBOT LD-19 RPLIDAR C1 RPLIDAR S2 YDLIDAR X4 FOV/Res. (\u00ba) 270\u00ba/0.125\u00ba 360\u00ba/0.8\u00ba 360\u00ba/0.72\u00ba 360\u00ba/0.1125\u00ba 360\u00ba/0.432-0.864\u00ba Type ToF ToF ToF ToF Triangulation Rate (Hz) 40 10 10 10 10 Range (m) 0.06-10 0.02-12 0.05-12 0.05-30 0.12-10"},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/","title":"Hokuyo UST-10LX","text":""},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#links","title":"Links","text":"<ul> <li>Hokuyo UST-10LX</li> </ul>"},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#documents","title":"Documents","text":"<ul> <li>Hokuyo UST-10LX Instruction Manual</li> <li>Hokuyo UST-10LX Datasheet</li> <li>Hokuyo UST-10LX-H01 Datasheet</li> <li>Hokuyo UST-10LX-H02 Datasheet</li> <li>Hokuyo UST-10LX UST Communication Protocol Specification</li> <li>Hokuyo UST-10LX IP Discovery Tool</li> <li>Hokuyo UST-10LX 3D Model (STEP)</li> </ul> <p>Note</p> <p>Indeed, there are two versions of the Hokuyo UST-10LX sensor: H01 (most typical one, indoor usage) and H02 (outdoor environments). As a result, the latter supports a much higher surrounding intensity specification than the former (&lt; 80.000lx versus &lt; 15.000lx for H02 and H01, respectively).</p>"},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#setup","title":"Setup","text":""},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#network","title":"Network","text":"<ol> <li>Open Ubuntu Settings<ul> <li>Task Bar   Settings</li> <li>Dock   Show Applications     Settings</li> </ul> </li> <li> Network  Wired   Settings  IPv4<ul> <li>Set IPv4 Method to Manual</li> <li>Addresses<ul> <li>Address: <code>192.168.0.1</code></li> <li>Netmask: <code>255.255.255.0</code></li> </ul> </li> </ul> </li> </ol> <p>Info</p> <p>The default network setting of the Hokuyo UST-10LX is the following one:</p> <ul> <li>IP address: <code>192.168.0.10</code></li> <li>Port number: <code>10940</code></li> </ul> <p>As a result, the computer should be in the same IP range, following a <code>255.255.255.0</code> mask for the IP address.</p> <p>Info</p> <p>If you want to change the IP address of the Hokuyo sensor, use the IP Discovery Tool.</p> <p>Tip</p> <p>One way to discover the IP address of the Hokuyo UST-10LX sensor is (assuming that the Ethernet wired connection is already configured to Manual IPv4 Method and its static IP is in the same range of the sensor):</p> <pre><code>nmap 192.168.0.0/24 -sn       # ping scan (disables port scan, should be faster)\nnmap 192.168.0.0/24 -p 10940  # only scan a specific port\nnmap 192.168.0.0/24 -p1-65535 # scans a range of ports (1 to 65535)\n</code></pre>"},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#ros-1-noetic","title":"ROS 1 Noetic","text":"<pre><code>sudo apt install ros-noetic-urg-node\n</code></pre>"},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#ros-2-foxy","title":"ROS 2 Foxy","text":"<pre><code>sudo apt install ros-foxy-urg-node\n</code></pre>"},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#launch","title":"Launch","text":""},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#ros-1-noetic_1","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\n\nmkdir ~/ros1_ws/launch/urg_node/ -p\ncd ~/ros1_ws/launch/urg_node\ntouch hokuyo_ust10lx.launch\ntee hokuyo_ust10lx.launch &lt;&lt;EOF\n&lt;launch&gt;\n\n  &lt;node pkg=\"urg_node\" type=\"urg_node\" name=\"urg_node\" output=\"screen\"&gt;\n\n    &lt;param name=\"ip_address\"        value=\"192.168.0.10\"/&gt;\n    &lt;param name=\"ip_port\"           value=\"10940\"/&gt;\n    &lt;param name=\"serial_port\"       value=\"\"/&gt;\n    &lt;param name=\"serial_baud\"       value=\"\"/&gt;\n    &lt;param name=\"frame_id\"          value=\"laser\"/&gt;\n    &lt;param name=\"calibrate_time\"    value=\"false\"/&gt;\n    &lt;param name=\"publish_intensity\" value=\"false\"/&gt;\n    &lt;param name=\"publish_multiecho\" value=\"false\"/&gt;\n    &lt;param name=\"angle_min\"         value=\"-2.2689\"/&gt;\n    &lt;param name=\"angle_max\"         value=\"2.2689\"/&gt;\n\n  &lt;/node&gt;\n\n&lt;/launch&gt;\n\nEOF\n\nroslaunch hokuyo_ust10lx.launch\n</code></pre> hokuyo_ust10lx.launch<pre><code>&lt;launch&gt;\n\n  &lt;node pkg=\"urg_node\" type=\"urg_node\" name=\"urg_node\" output=\"screen\"&gt;\n\n    &lt;param name=\"ip_address\"        value=\"192.168.0.10\"/&gt;\n    &lt;param name=\"ip_port\"           value=\"10940\"/&gt;\n    &lt;param name=\"serial_port\"       value=\"\"/&gt;\n    &lt;param name=\"serial_baud\"       value=\"\"/&gt;\n    &lt;param name=\"frame_id\"          value=\"laser\"/&gt;\n    &lt;param name=\"calibrate_time\"    value=\"false\"/&gt;\n    &lt;param name=\"publish_intensity\" value=\"false\"/&gt;\n    &lt;param name=\"publish_multiecho\" value=\"false\"/&gt;\n    &lt;param name=\"angle_min\"         value=\"-2.2689\"/&gt;\n    &lt;param name=\"angle_max\"         value=\"2.2689\"/&gt;\n\n  &lt;/node&gt;\n\n&lt;/launch&gt;\n</code></pre>"},{"location":"content/sensors/lidar2d/hokuyo_ust-10lx/#ros-2-foxy_1","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\n\nmkdir ~/ros2_ws/launch/urg_node/ -p\ncd ~/ros2_ws/launch/urg_node\ntouch hokuyo_ust10lx.launch.xml\ntee hokuyo_ust10lx.launch.xml &lt;&lt;EOF\n&lt;launch&gt;\n\n  &lt;node pkg=\"urg_node\" exec=\"urg_node_driver\" name=\"urg_node\"&gt;\n\n    &lt;param name=\"ip_address\"        value=\"192.168.0.10\"/&gt;\n    &lt;param name=\"ip_port\"           value=\"10940\"/&gt;\n    &lt;param name=\"laser_frame_id\"    value=\"laser\"/&gt;\n    &lt;param name=\"calibrate_time\"    value=\"false\"/&gt;\n    &lt;param name=\"publish_intensity\" value=\"false\"/&gt;\n    &lt;param name=\"publish_multiecho\" value=\"false\"/&gt;\n    &lt;param name=\"angle_min\"         value=\"-2.2689\"/&gt;\n    &lt;param name=\"angle_max\"         value=\"2.2689\"/&gt;\n\n  &lt;/node&gt;\n\n&lt;/launch&gt;\n\nEOF\n\nros2 launch hokuyo_ust10lx.launch.xml\n</code></pre> hokuyo_ust10lx.launch.xml<pre><code>&lt;launch&gt;\n\n  &lt;node pkg=\"urg_node\" exec=\"urg_node_driver\" name=\"urg_node\"&gt;\n\n    &lt;param name=\"ip_address\"        value=\"192.168.0.10\"/&gt;\n    &lt;param name=\"ip_port\"           value=\"10940\"/&gt;\n    &lt;param name=\"laser_frame_id\"    value=\"laser\"/&gt;\n    &lt;param name=\"calibrate_time\"    value=\"false\"/&gt;\n    &lt;param name=\"publish_intensity\" value=\"false\"/&gt;\n    &lt;param name=\"publish_multiecho\" value=\"false\"/&gt;\n    &lt;param name=\"angle_min\"         value=\"-2.2689\"/&gt;\n    &lt;param name=\"angle_max\"         value=\"2.2689\"/&gt;\n\n  &lt;/node&gt;\n\n&lt;/launch&gt;\n</code></pre>"},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/","title":"LDROBOT LD-19","text":""},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/#links","title":"Links","text":"<ul> <li>LDROBOT D300 LiDAR Kit (LiDAR LD-19 + serial cable + speed control plate)</li> </ul>"},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/#documents","title":"Documents","text":"<ul> <li>LDROBOT LD-19 Datasheet</li> <li>LDROBOT LD-19 Development Manual</li> <li>LDROBOT LD-19 3D Model (STEP)</li> </ul>"},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/#setup","title":"Setup","text":"<p>Note</p> <p>The setup of specific udev rules for USB-based 2D laser scanners may not be possible because it is the CP2102N USB to UART Bridge Controller (or other alike) that is communicating with the operating system and not the sensor itself...</p> <pre><code>udevadm info -a -n /dev/ttyUSB0\n</code></pre>"},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/#ros-1-noetic","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\n\ncd ~/ros1_ws/src/\ngit clone git@github.com:ldrobotSensorTeam/ldlidar_ros.git\n\ncd ldlidar_ros/\ngit submodule update --init --recursive -f\n\ncd ~/ros1_ws/\nrosdep install --from-paths src --ignore-src  -r -y\ncatkin_make --force-cmake -DCMAKE_BUILD_TYPE=Release\n\nsource devel/setup.bash\n</code></pre>"},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/#ros-2-foxy","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\n\ncd ~/ros2_ws/src/\ngit clone git@github.com:ldrobotSensorTeam/ldlidar_ros2.git\n\ncd ldlidar_ros2/\ngit submodule update --init --recursive -f\n\ncd ~/ros2_ws/\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Release --event-handlers summary+ status+ console_cohesion+ console_direct+ console_start_end+ console_stderr+\n\nsource install/setup.bash\n</code></pre>"},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/#launch","title":"Launch","text":""},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/#ros-1-noetic_1","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\nsource /home/user/ros1_ws/devel/setup.bash\n\nroslaunch ldlidar_ros ld19.launch\n</code></pre> ld19.launch<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;launch&gt;\n  &lt;arg name=\"laser_scan_topic_name\"     default=\"scan\"/&gt;\n  &lt;arg name=\"point_cloud_2d_topic_name\" default=\"pointcloud2d\"/&gt;\n  &lt;arg name=\"frame_id\"                  default=\"base_laser\"/&gt;\n  &lt;arg name=\"port_name\"                 default=\"/dev/ttyUSB0\"/&gt;\n  &lt;arg name=\"fix_to_base_link\"          default=\"true\" /&gt;\n\n  &lt;!-- LDROBOT LiDAR message publisher node --&gt;\n  &lt;node pkg=\"ldlidar_ros\" type=\"ldlidar_ros_node\"\n        name=\"ldlidar_publisher_ld19\"\n        output=\"screen\"&gt;\n\n    &lt;param name=\"product_name\"              value=\"LDLiDAR_LD19\"/&gt;\n    &lt;param name=\"laser_scan_topic_name\"     value=\"$(arg laser_scan_topic_name)\"/&gt;\n    &lt;param name=\"point_cloud_2d_topic_name\" value=\"$(arg point_cloud_2d_topic_name)\"/&gt;\n    &lt;param name=\"frame_id\"                  value=\"$(arg frame_id)\"/&gt;\n    &lt;param name=\"port_name\"                 value=\"$(arg port_name)\"/&gt;\n    &lt;param name=\"serial_baudrate\"           value=\"230400\"/&gt;\n\n    &lt;!-- Set laser scan directon: --&gt;\n    &lt;!--    1. Set counterclockwise, example: &lt;param name=\"laser_scan_dir\" type=\"bool\" value=\"true\"/&gt; --&gt;\n    &lt;!--    2. Set clockwise,        example: &lt;param name=\"laser_scan_dir\" type=\"bool\" value=\"false\"/&gt; --&gt;\n    &lt;param name=\"laser_scan_dir\" type=\"bool\" value=\"true\"/&gt;\n\n    &lt;!-- Angle crop setting, Mask data within the set angle range --&gt;\n    &lt;!--    1. Enable angle crop fuction: --&gt;\n    &lt;!--       1.1. enable angle crop,  example: &lt;param name=\"enable_angle_crop_func\" type=\"bool\" value=\"true\"/&gt; --&gt;\n    &lt;!--       1.2. disable angle crop, example: &lt;param name=\"enable_angle_crop_func\" type=\"bool\" value=\"false\"/&gt; --&gt;\n    &lt;param name=\"enable_angle_crop_func\" type=\"bool\" value=\"false\"/&gt;\n\n    &lt;!--    2. Angle cropping interval setting, The distance and intensity data within the set angle range will be set to 0 --&gt;\n    &lt;!--       angle &gt;= \"angle_crop_min\" and angle &lt;= \"angle_crop_max\", unit is degress --&gt;\n    &lt;param name=\"angle_crop_min\" type=\"double\" value=\"135.0\"/&gt;\n    &lt;param name=\"angle_crop_max\" type=\"double\" value=\"225.0\"/&gt;\n    &lt;param name=\"range_min\" type=\"double\" value=\"0.02\"/&gt;\n    &lt;param name=\"range_max\" type=\"double\" value=\"12.0\"/&gt;\n\n  &lt;/node&gt;\n\n  &lt;!-- publisher tf transform, parents frame is base_link, child frame is base_laser --&gt;\n  &lt;!-- args=\"x y z yaw pitch roll parents_frame_id child_frame_id period_in_ms\"--&gt;\n  &lt;node name=\"base_to_laser_ld19\" pkg=\"tf\" type=\"static_transform_publisher\"\n        args=\"0.0 0.0 0.18 0 0.0 0.0 base_link base_laser 50\"\n        if=\"$(arg fix_to_base_link)\"/&gt;\n\n&lt;/launch&gt;\n</code></pre>"},{"location":"content/sensors/lidar2d/ldrobot_d300_ld19/#ros-2-foxy_1","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\nsource /home/user/ros2_ws/install/setup.bash\n\nros2 launch ldlidar_ros2 ld19.launch.py\n</code></pre> ld19.launch.py<pre><code>#!/usr/bin/env python3\nfrom launch import LaunchDescription\nfrom launch_ros.actions import Node\n\n'''\nParameter Description:\n---\n- Set laser scan directon:\n  1. Set counterclockwise, example: {'laser_scan_dir': True}\n  2. Set clockwise,        example: {'laser_scan_dir': False}\n- Angle crop setting, Mask data within the set angle range:\n  1. Enable angle crop fuction:\n    1.1. enable angle crop,  example: {'enable_angle_crop_func': True}\n    1.2. disable angle crop, example: {'enable_angle_crop_func': False}\n  2. Angle cropping interval setting:\n  - The distance and intensity data within the set angle range will be set to 0.\n  - angle &gt;= 'angle_crop_min' and angle &lt;= 'angle_crop_max' which is [angle_crop_min, angle_crop_max], unit is degress.\n    example:\n      {'angle_crop_min': 135.0}\n      {'angle_crop_max': 225.0}\n      which is [135.0, 225.0], angle unit is degress.\n'''\n\ndef generate_launch_description():\n  # LDROBOT LiDAR publisher node\n  ldlidar_node = Node(\n      package='ldlidar_ros2',\n      executable='ldlidar_ros2_node',\n      name='ldlidar_publisher_ld19',\n      output='screen',\n      parameters=[\n        {'product_name': 'LDLiDAR_LD19'},\n        {'laser_scan_topic_name': 'scan'},\n        {'point_cloud_2d_topic_name': 'pointcloud2d'},\n        {'frame_id': 'base_laser'},\n        {'port_name': '/dev/ttyUSB0'},\n        {'serial_baudrate': 230400},\n        {'laser_scan_dir': True},\n        {'enable_angle_crop_func': False},\n        {'angle_crop_min': 135.0},  # unit is degress\n        {'angle_crop_max': 225.0},  # unit is degress\n        {'range_min': 0.02}, # unit is meter\n        {'range_max': 12.0}   # unit is meter\n      ]\n  )\n\n  # base_link to base_laser tf node\n  base_link_to_laser_tf_node = Node(\n    package='tf2_ros',\n    executable='static_transform_publisher',\n    name='base_link_to_base_laser_ld19',\n    arguments=['0','0','0.18','0','0','0','base_link','base_laser']\n  )\n\n\n  # Define LaunchDescription variable\n  ld = LaunchDescription()\n\n  ld.add_action(ldlidar_node)\n  ld.add_action(base_link_to_laser_tf_node)\n\n  return ld\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/","title":"SLAMTEC RPLIDAR C1","text":""},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/#links","title":"Links","text":"<ul> <li>RPLIDAR C1</li> </ul>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/#documents","title":"Documents","text":"<ul> <li>RPLIDAR C1 Datasheet</li> <li>RPLIDAR C1 Development Kit User Manual</li> <li>RPLIDAR C1 Interface Protocol</li> <li>RPLIDAR C1 3D Model (IGS)</li> </ul>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/#setup","title":"Setup","text":"<p>Note</p> <p>The setup of specific udev rules for USB-based 2D laser scanners may not be possible because it is the CP2102N USB to UART Bridge Controller (or other alike) that is communicating with the operating system and not the sensor itself...</p> <pre><code>udevadm info -a -n /dev/ttyUSB0\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/#ros-1-noetic","title":"ROS 1 Noetic","text":"<pre><code>sudo apt install ros-noetic-rplidar-ros\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/#ros-2-foxy","title":"ROS 2 Foxy","text":"<pre><code># sudo apt install ros-foxy-rplidar-ros\n# (much older version 2.0.2-1focal.20230527.062031\n# compared to ros-noetic-rplidar-ros: 2.1.5-1focal.20240913.193218)\n\ncd ~/ros2_ws/src/\ngit clone git@github.com:Slamtec/rplidar_ros.git\n\ncd rplidar_ros/\ngit checkout ros2\n\ncd ~/ros2_ws/\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Release --event-handlers summary+ status+ console_cohesion+ console_direct+ console_start_end+ console_stderr+\n\nsource install/setup.bash\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/#launch","title":"Launch","text":""},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/#ros-1-noetic_1","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\n\nroslaunch rplidar_ros rplidar_c1.launch\n</code></pre> rplidar_c1.launch<pre><code>&lt;launch&gt;\n\n  &lt;node name=\"rplidarNode\" pkg=\"rplidar_ros\" type=\"rplidarNode\"\n        output=\"screen\"&gt;\n\n    &lt;param name=\"serial_port\"      type=\"string\" value=\"/dev/ttyUSB0\"/&gt;\n    &lt;param name=\"serial_baudrate\"  type=\"int\"    value=\"460800\"/&gt;\n    &lt;param name=\"frame_id\"         type=\"string\" value=\"laser\"/&gt;\n    &lt;param name=\"inverted\"         type=\"bool\"   value=\"false\"/&gt;\n    &lt;param name=\"angle_compensate\" type=\"bool\"   value=\"true\"/&gt;\n    &lt;param name=\"scan_frequency\"   type=\"double\" value=\"10.0\"/&gt;\n    &lt;param name=\"scan_mode\"        type=\"string\" value=\"Standard\"/&gt;\n\n  &lt;/node&gt;\n\n&lt;/launch&gt;\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_c1/#ros-2-foxy_1","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\nsource /home/user/ros2_ws/install/setup.bash\n\nros2 launch rplidar_ros rplidar_c1_launch.py\n</code></pre> rplidar_c1_launch.py<pre><code>#!/usr/bin/env python3\n\nimport os\n\nfrom ament_index_python.packages import get_package_share_directory\nfrom launch import LaunchDescription\nfrom launch.actions import DeclareLaunchArgument\nfrom launch.actions import LogInfo\nfrom launch.substitutions import LaunchConfiguration\nfrom launch_ros.actions import Node\n\n\ndef generate_launch_description():\n    channel_type     = LaunchConfiguration('channel_type',     default='serial')\n    serial_port      = LaunchConfiguration('serial_port',      default='/dev/ttyUSB0')\n    serial_baudrate  = LaunchConfiguration('serial_baudrate',  default='460800')\n    frame_id         = LaunchConfiguration('frame_id',         default='laser')\n    inverted         = LaunchConfiguration('inverted',         default='false')\n    angle_compensate = LaunchConfiguration('angle_compensate', default='true')\n    scan_mode        = LaunchConfiguration('scan_mode',        default='Standard')\n\n    return LaunchDescription([\n        DeclareLaunchArgument(\n            'channel_type',\n            default_value=channel_type,\n            description='Specifying channel type of lidar'),\n\n        DeclareLaunchArgument(\n            'serial_port',\n            default_value=serial_port,\n            description='Specifying usb port to connected lidar'),\n\n        DeclareLaunchArgument(\n            'serial_baudrate',\n            default_value=serial_baudrate,\n            description='Specifying usb port baudrate to connected lidar'),\n\n        DeclareLaunchArgument(\n            'frame_id',\n            default_value=frame_id,\n            description='Specifying frame_id of lidar'),\n\n        DeclareLaunchArgument(\n            'inverted',\n            default_value=inverted,\n            description='Specifying whether or not to invert scan data'),\n\n        DeclareLaunchArgument(\n            'angle_compensate',\n            default_value=angle_compensate,\n            description='Specifying whether or not to enable angle_compensate of scan data'),\n\n        DeclareLaunchArgument(\n            'scan_mode',\n            default_value=scan_mode,\n            description='Specifying scan mode of lidar'),\n\n        Node(\n            package='rplidar_ros',\n            executable='rplidar_node',\n            name='rplidar_node',\n            parameters=[{'channel_type':channel_type,\n                         'serial_port': serial_port,\n                         'serial_baudrate': serial_baudrate,\n                         'frame_id': frame_id,\n                         'inverted': inverted,\n                         'angle_compensate': angle_compensate,\n                         'scan_mode': scan_mode}],\n            output='screen'),\n    ])\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/","title":"SLAMTEC RPLIDAR S2","text":""},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/#links","title":"Links","text":"<ul> <li>RPLIDAR S2</li> </ul>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/#documents","title":"Documents","text":"<ul> <li>RPLIDAR S2 Datasheet</li> <li>RPLIDAR S2 Development Kit User Manual</li> <li>RPLIDAR S2 Interface Protocol</li> <li>RPLIDAR S2 3D Model (IGS)</li> </ul>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/#setup","title":"Setup","text":"<p>Note</p> <p>The setup of specific udev rules for USB-based 2D laser scanners may not be possible because it is the CP2102N USB to UART Bridge Controller (or other alike) that is communicating with the operating system and not the sensor itself...</p> <pre><code>udevadm info -a -n /dev/ttyUSB0\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/#ros-1-noetic","title":"ROS 1 Noetic","text":"<pre><code>sudo apt install ros-noetic-rplidar-ros\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/#ros-2-foxy","title":"ROS 2 Foxy","text":"<pre><code># sudo apt install ros-foxy-rplidar-ros\n# (much older version 2.0.2-1focal.20230527.062031\n# compared to ros-noetic-rplidar-ros: 2.1.5-1focal.20240913.193218)\n\ncd ~/ros2_ws/src/\ngit clone git@github.com:Slamtec/rplidar_ros.git\n\ncd rplidar_ros/\ngit checkout ros2\n\ncd ~/ros2_ws/\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Release --event-handlers summary+ status+ console_cohesion+ console_direct+ console_start_end+ console_stderr+\n\nsource install/setup.bash\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/#launch","title":"Launch","text":""},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/#ros-1-noetic_1","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\n\nroslaunch rplidar_ros rplidar_s2.launch\n</code></pre> rplidar_s2.launch<pre><code>&lt;launch&gt;\n\n  &lt;node name=\"rplidarNode\" pkg=\"rplidar_ros\" type=\"rplidarNode\"\n        output=\"screen\"&gt;\n\n    &lt;param name=\"serial_port\"      type=\"string\" value=\"/dev/ttyUSB0\"/&gt;\n    &lt;param name=\"serial_baudrate\"  type=\"int\"    value=\"1000000\"/&gt;\n    &lt;param name=\"frame_id\"         type=\"string\" value=\"laser\"/&gt;\n    &lt;param name=\"inverted\"         type=\"bool\"   value=\"false\"/&gt;\n    &lt;param name=\"angle_compensate\" type=\"bool\"   value=\"true\"/&gt;\n    &lt;param name=\"scan_frequency\"   type=\"double\" value=\"10.0\"/&gt;\n\n  &lt;/node&gt;\n\n&lt;/launch&gt;\n</code></pre>"},{"location":"content/sensors/lidar2d/slamtec_rplidar_s2/#ros-2-foxy_1","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\nsource /home/user/ros2_ws/install/setup.bash\n\nros2 launch rplidar_ros rplidar_s2_launch.py\n</code></pre> rplidar_s2_launch.py<pre><code>#!/usr/bin/env python3\n\nimport os\n\nfrom ament_index_python.packages import get_package_share_directory\nfrom launch import LaunchDescription\nfrom launch.actions import DeclareLaunchArgument\nfrom launch.actions import LogInfo\nfrom launch.substitutions import LaunchConfiguration\nfrom launch_ros.actions import Node\n\n\ndef generate_launch_description():\n    channel_type     = LaunchConfiguration('channel_type'    , default='serial')\n    serial_port      = LaunchConfiguration('serial_port'     , default='/dev/ttyUSB0')\n    serial_baudrate  = LaunchConfiguration('serial_baudrate' , default='1000000') #for s2 is 1000000\n    frame_id         = LaunchConfiguration('frame_id'        , default='laser')\n    inverted         = LaunchConfiguration('inverted'        , default='false')\n    angle_compensate = LaunchConfiguration('angle_compensate', default='true')\n    scan_mode        = LaunchConfiguration('scan_mode'       , default='DenseBoost')\n\n    return LaunchDescription([\n        DeclareLaunchArgument(\n            'channel_type',\n            default_value=channel_type,\n            description='Specifying channel type of lidar'),\n\n        DeclareLaunchArgument(\n            'serial_port',\n            default_value=serial_port,\n            description='Specifying usb port to connected lidar'),\n\n        DeclareLaunchArgument(\n            'serial_baudrate',\n            default_value=serial_baudrate,\n            description='Specifying usb port baudrate to connected lidar'),\n\n        DeclareLaunchArgument(\n            'frame_id',\n            default_value=frame_id,\n            description='Specifying frame_id of lidar'),\n\n        DeclareLaunchArgument(\n            'inverted',\n            default_value=inverted,\n            description='Specifying whether or not to invert scan data'),\n\n        DeclareLaunchArgument(\n            'angle_compensate',\n            default_value=angle_compensate,\n            description='Specifying whether or not to enable angle_compensate of scan data'),\n\n        DeclareLaunchArgument(\n            'scan_mode',\n            default_value=scan_mode,\n            description='Specifying scan mode of lidar'),\n\n        Node(\n            package='rplidar_ros',\n            executable='rplidar_node',\n            name='rplidar_node',\n            parameters=[{'channel_type':channel_type,\n                         'serial_port': serial_port,\n                         'serial_baudrate': serial_baudrate,\n                         'frame_id': frame_id,\n                         'inverted': inverted,\n                         'angle_compensate': angle_compensate,\n                         'scan_mode': scan_mode}],\n            output='screen'),\n    ])\n</code></pre>"},{"location":"content/sensors/lidar2d/ydlidar_x4/","title":"YDLIDAR X4","text":""},{"location":"content/sensors/lidar2d/ydlidar_x4/#links","title":"Links","text":"<ul> <li>YDLIDAR X4</li> </ul>"},{"location":"content/sensors/lidar2d/ydlidar_x4/#documents","title":"Documents","text":"<ul> <li>YDLIDAR X4 Datasheet</li> <li>YDLIDAR X4 User Manual</li> <li>YDLIDAR X4 3D Model (STEP)</li> </ul>"},{"location":"content/sensors/lidar2d/ydlidar_x4/#setup","title":"Setup","text":"<p>Note</p> <p>The setup of specific udev rules for USB-based 2D laser scanners may not be possible because it is the CP2102N USB to UART Bridge Controller (or other alike) that is communicating with the operating system and not the sensor itself...</p> <pre><code>udevadm info -a -n /dev/ttyUSB0\n</code></pre>"},{"location":"content/sensors/lidar2d/ydlidar_x4/#ydlidar-sdk","title":"YDLIDAR SDK","text":"<pre><code># Dependencies\nsudo apt install cmake pkg-config\n\nmkdir ~/dev/ros -p\n\ncd ~/dev/ros\ngit clone git@github.com:YDLIDAR/YDLidar-SDK.git\n\ncd YDLidar-SDK\nmkdir build\n\ncd build\ncmake ..\nmake\nsudo make install\n</code></pre>"},{"location":"content/sensors/lidar2d/ydlidar_x4/#ros-1-noetic","title":"ROS 1 Noetic","text":"<pre><code>cd ~/ros1_ws/src/\ngit clone git@github.com:YDLIDAR/ydlidar_ros_driver.git\n\ncd ~/ros1_ws/\ncatkin_make --force-cmake -DCMAKE_BUILD_TYPE=Release\n\nsource devel/setup.bash\n</code></pre>"},{"location":"content/sensors/lidar2d/ydlidar_x4/#ros-2-foxy","title":"ROS 2 Foxy","text":"<pre><code>cd ~/ros2_ws/src/\ngit clone git@github.com:YDLIDAR/ydlidar_ros2_driver.git\n\ncd ~/ros2_ws/\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Release --event-handlers summary+ status+ console_cohesion+ console_direct+ console_start_end+ console_stderr+\n\nsource install/setup.bash\n</code></pre>"},{"location":"content/sensors/lidar2d/ydlidar_x4/#launch","title":"Launch","text":""},{"location":"content/sensors/lidar2d/ydlidar_x4/#ros-1-noetic_1","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\nsource /home/user/ros1_ws/devel/setup.bash\n\nroslaunch ydlidar_ros_driver X4.launch\n</code></pre> X4.launch<pre><code>&lt;launch&gt;\n\n  &lt;node pkg=\"ydlidar_ros_driver\" type=\"ydlidar_ros_driver_node\"\n        name=\"ydlidar_lidar_publisher\"\n        output=\"screen\" respawn=\"false\"&gt;\n\n    &lt;!-- string property --&gt;\n    &lt;param name=\"port\"         type=\"string\" value=\"/dev/ttyUSB0\"/&gt;\n    &lt;param name=\"frame_id\"     type=\"string\" value=\"laser_frame\"/&gt;\n    &lt;param name=\"ignore_array\" type=\"string\" value=\"\"/&gt;\n\n    &lt;!-- int property --&gt;\n    &lt;param name=\"baudrate\"             type=\"int\" value=\"128000\"/&gt;\n    &lt;!-- 0:TYPE_TOF, 1:TYPE_TRIANGLE, 2:TYPE_TOF_NET --&gt;\n    &lt;param name=\"lidar_type\"           type=\"int\" value=\"1\"/&gt;\n    &lt;!-- 0:YDLIDAR_TYPE_SERIAL, 1:YDLIDAR_TYPE_TCP --&gt;\n    &lt;param name=\"device_type\"          type=\"int\" value=\"0\"/&gt;\n    &lt;param name=\"sample_rate\"          type=\"int\" value=\"5\"/&gt;\n    &lt;param name=\"abnormal_check_count\" type=\"int\" value=\"4\"/&gt;\n\n    &lt;!-- bool property --&gt;\n    &lt;param name=\"resolution_fixed\"         type=\"bool\" value=\"true\"/&gt;\n    &lt;param name=\"auto_reconnect\"           type=\"bool\" value=\"true\"/&gt;\n    &lt;param name=\"reversion\"                type=\"bool\" value=\"false\"/&gt;\n    &lt;param name=\"inverted\"                 type=\"bool\" value=\"true\"/&gt;\n    &lt;param name=\"isSingleChannel\"          type=\"bool\" value=\"false\"/&gt;\n    &lt;param name=\"intensity\"                type=\"bool\" value=\"false\"/&gt;\n    &lt;param name=\"support_motor_dtr\"        type=\"bool\" value=\"true\"/&gt;\n    &lt;param name=\"invalid_range_is_inf\"     type=\"bool\" value=\"false\"/&gt;\n    &lt;param name=\"point_cloud_preservative\" type=\"bool\" value=\"false\"/&gt;\n\n    &lt;!-- float property --&gt;\n    &lt;param name=\"angle_min\" type=\"double\" value=\"-180\"/&gt;\n    &lt;param name=\"angle_max\" type=\"double\" value=\"180\"/&gt;\n    &lt;param name=\"range_min\" type=\"double\" value=\"0.1\"/&gt;\n    &lt;param name=\"range_max\" type=\"double\" value=\"12.0\"/&gt;\n    &lt;!-- frequency is invalid, External PWM control speed --&gt;\n    &lt;param name=\"frequency\" type=\"double\" value=\"10.0\"/&gt;\n\n  &lt;/node&gt;\n\n&lt;/launch&gt;\n</code></pre> <p>Tip</p> <p>Default launch file uses <code>/dev/ydlidar</code> port name, you probably need to change it to <code>/dev/ttyUSB0</code>.</p>"},{"location":"content/sensors/lidar2d/ydlidar_x4/#ros-2-foxy_1","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\nsource /home/user/ros2_ws/install/setup.bash\n\nros2 launch ydlidar_ros2_driver ydlidar_launch.py params_file:=/home/user/ros2_ws/src/ydlidar_ros2_driver/params/X4.yaml\n</code></pre> ydlidar_launch.py<pre><code>#!/usr/bin/python3\n# Copyright 2020, EAIBOT\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nfrom ament_index_python.packages import get_package_share_directory\n\nfrom launch import LaunchDescription\nfrom launch_ros.actions import LifecycleNode\nfrom launch_ros.actions import Node\nfrom launch.actions import DeclareLaunchArgument\nfrom launch.substitutions import LaunchConfiguration\nfrom launch.actions import LogInfo\n\nimport lifecycle_msgs.msg\nimport os\n\n\ndef generate_launch_description():\n    share_dir = get_package_share_directory('ydlidar_ros2_driver')\n    parameter_file = LaunchConfiguration('params_file')\n    node_name = 'ydlidar_ros2_driver_node'\n\n    params_declare = DeclareLaunchArgument('params_file',\n                                           default_value=os.path.join(\n                                               share_dir, 'params', 'ydlidar.yaml'),\n                                           description='FPath to the ROS2 parameters file to use.')\n\n    driver_node = LifecycleNode(package='ydlidar_ros2_driver',\n                                node_executable='ydlidar_ros2_driver_node',\n                                node_name='ydlidar_ros2_driver_node',\n                                output='screen',\n                                emulate_tty=True,\n                                parameters=[parameter_file],\n                                node_namespace='/',\n                                )\n    tf2_node = Node(package='tf2_ros',\n                    node_executable='static_transform_publisher',\n                    node_name='static_tf_pub_laser',\n                    arguments=['0', '0', '0.02','0', '0', '0', '1','base_link','laser_frame'],\n                    )\n\n    return LaunchDescription([\n        params_declare,\n        driver_node,\n        tf2_node,\n    ])\n</code></pre> X4.yaml<pre><code>ydlidar_ros2_driver_node:\n  ros__parameters:\n    port: /dev/ttyUSB0\n    frame_id: laser_frame\n    ignore_array: \"\"\n    baudrate: 128000\n    lidar_type: 1\n    device_type: 0\n    sample_rate: 5\n    abnormal_check_count: 4\n    fixed_resolution: true\n    reversion: true\n    inverted: true\n    auto_reconnect: true\n    isSingleChannel: false\n    intensity: false\n    support_motor_dtr: true\n    angle_max: 180.0\n    angle_min: -180.0\n    range_max: 12.0\n    range_min: 0.1\n    frequency: 10.0\n    invalid_range_is_inf: false\n</code></pre>"},{"location":"content/sensors/lidar3d/","title":"LiDARs 3D","text":"Specs Livox Mid-360 Ouster OS1-64 RoboSense HELIOS-5515 Velodyne VLP-16 H/VFOV (\u00ba) 360\u00ba/59\u00ba 360\u00ba/45\u00ba 360\u00ba/70\u00ba 360\u00ba/20\u00ba HRes. (\u00ba) - 0.176/0.352/0.703\u00ba 0.1/0.2/0.4\u00ba 0.1-0.4\u00ba VRes. (\u00ba) - 0.71\u00ba \u2264 1.33\u00ba 1.33\u00ba VRange (\u00ba) -7-+52\u00ba -22.5 - +22.5\u00ba -55 - +15\u00ba -10 - +10\u00ba VType non-repetitive rotational uniform rotational non-uniform rotational uniform #channels - 64 32 16 Rate (Hz) 10 10/20 5/10/20 5-20 Range (m) 0.1-70 0.3-120 0.2-150 100"},{"location":"content/sensors/rgbd/","title":"RGBD Cameras","text":"Specs RealSense D455 RealSense L515 OAK-D Pro Color H/VFOV (\u00ba) 90\u00ba/65\u00ba 70\u00ba/43\u00ba 69\u00ba/55\u00ba Res. (px) 1280 \u00d7 800 1920 \u00d7 1080 4056 \u00d7 3040 Rate (fps) 30 30 60 Depth Type active stereo LiDAR active stereo H/VFOV (\u00ba) 87\u00ba/58\u00ba 70\u00ba/55\u00ba 80\u00ba/55\u00ba Res. (px) 1280x720 1024x768 1280x800 Rate (fps) 90 30 120 Range (m) 0.6-6 0.25-9 0.7-12"},{"location":"content/sensors/rgbd/intel_realsense_d455/","title":"Intel RealSense D455","text":""},{"location":"content/sensors/rgbd/intel_realsense_d455/#links","title":"Links","text":"<ul> <li>Intel RealSense D455</li> <li>Intel RealSense Documentation</li> </ul>"},{"location":"content/sensors/rgbd/intel_realsense_d455/#documents","title":"Documents","text":"<ul> <li>Intel RealSense D400 Series Datasheet</li> <li>Intel RealSense D455 3D Model (STEP)</li> </ul>"},{"location":"content/sensors/rgbd/intel_realsense_d455/#setup","title":"Setup","text":""},{"location":"content/sensors/rgbd/intel_realsense_d455/#ros-1-noetic","title":"ROS 1 Noetic","text":"<pre><code>sudo apt install ros-noetic-realsense2-camera ros-noetic-realsense2-description\n</code></pre>"},{"location":"content/sensors/rgbd/intel_realsense_d455/#ros-2-foxy","title":"ROS 2 Foxy","text":"<pre><code>sudo apt install ros-foxy-realsense2-camera ros-foxy-realsense2-description\n</code></pre>"},{"location":"content/sensors/rgbd/intel_realsense_d455/#launch","title":"Launch","text":""},{"location":"content/sensors/rgbd/intel_realsense_d455/#ros-1-noetic_1","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\n\nroslaunch realsense2_camera rs_camera.launch\n</code></pre> rs_camera.launch<pre><code>&lt;launch&gt;\n\n  &lt;arg name=\"serial_no\"           default=\"\"/&gt;\n  &lt;arg name=\"usb_port_id\"         default=\"\"/&gt;\n  &lt;arg name=\"device_type\"         default=\"\"/&gt;\n  &lt;arg name=\"json_file_path\"      default=\"\"/&gt;\n  &lt;arg name=\"camera\"              default=\"camera\"/&gt;\n  &lt;arg name=\"tf_prefix\"           default=\"$(arg camera)\"/&gt;\n  &lt;arg name=\"external_manager\"    default=\"false\"/&gt;\n  &lt;arg name=\"manager\"             default=\"realsense2_camera_manager\"/&gt;\n  &lt;arg name=\"output\"              default=\"screen\"/&gt;\n  &lt;arg name=\"respawn\"             default=\"false\"/&gt;\n\n  &lt;arg name=\"fisheye_width\"       default=\"-1\"/&gt;\n  &lt;arg name=\"fisheye_height\"      default=\"-1\"/&gt;\n  &lt;arg name=\"enable_fisheye\"      default=\"false\"/&gt;\n\n  &lt;arg name=\"depth_width\"         default=\"-1\"/&gt;\n  &lt;arg name=\"depth_height\"        default=\"-1\"/&gt;\n  &lt;arg name=\"enable_depth\"        default=\"true\"/&gt;\n\n  &lt;arg name=\"confidence_width\"    default=\"-1\"/&gt;\n  &lt;arg name=\"confidence_height\"   default=\"-1\"/&gt;\n  &lt;arg name=\"enable_confidence\"   default=\"true\"/&gt;\n  &lt;arg name=\"confidence_fps\"      default=\"-1\"/&gt;\n\n  &lt;arg name=\"infra_width\"         default=\"848\"/&gt;\n  &lt;arg name=\"infra_height\"        default=\"480\"/&gt;\n  &lt;arg name=\"enable_infra\"        default=\"false\"/&gt;\n  &lt;arg name=\"enable_infra1\"       default=\"false\"/&gt;\n  &lt;arg name=\"enable_infra2\"       default=\"false\"/&gt;\n  &lt;arg name=\"infra_rgb\"           default=\"false\"/&gt;\n\n  &lt;arg name=\"color_width\"         default=\"-1\"/&gt;\n  &lt;arg name=\"color_height\"        default=\"-1\"/&gt;\n  &lt;arg name=\"enable_color\"        default=\"true\"/&gt;\n\n  &lt;arg name=\"fisheye_fps\"         default=\"-1\"/&gt;\n  &lt;arg name=\"depth_fps\"           default=\"-1\"/&gt;\n  &lt;arg name=\"infra_fps\"           default=\"30\"/&gt;\n  &lt;arg name=\"color_fps\"           default=\"-1\"/&gt;\n  &lt;arg name=\"gyro_fps\"            default=\"-1\"/&gt;\n  &lt;arg name=\"accel_fps\"           default=\"-1\"/&gt;\n  &lt;arg name=\"enable_gyro\"         default=\"false\"/&gt;\n  &lt;arg name=\"enable_accel\"        default=\"false\"/&gt;\n\n  &lt;arg name=\"enable_pointcloud\"         default=\"false\"/&gt;\n  &lt;arg name=\"pointcloud_texture_stream\" default=\"RS2_STREAM_COLOR\"/&gt;\n  &lt;arg name=\"pointcloud_texture_index\"  default=\"0\"/&gt;\n  &lt;arg name=\"allow_no_texture_points\"   default=\"false\"/&gt;\n  &lt;arg name=\"ordered_pc\"                default=\"false\"/&gt;\n\n  &lt;arg name=\"enable_sync\"               default=\"false\"/&gt;\n  &lt;arg name=\"align_depth\"               default=\"false\"/&gt;\n\n  &lt;arg name=\"publish_tf\"                default=\"true\"/&gt;\n  &lt;arg name=\"tf_publish_rate\"           default=\"0\"/&gt;\n\n  &lt;arg name=\"filters\"                   default=\"\"/&gt;\n  &lt;arg name=\"clip_distance\"             default=\"-2\"/&gt;\n  &lt;arg name=\"linear_accel_cov\"          default=\"0.01\"/&gt;\n  &lt;arg name=\"initial_reset\"             default=\"false\"/&gt;\n  &lt;arg name=\"reconnect_timeout\"         default=\"6.0\"/&gt;\n  &lt;arg name=\"wait_for_device_timeout\"   default=\"-1.0\"/&gt;\n  &lt;arg name=\"unite_imu_method\"          default=\"\"/&gt;\n  &lt;arg name=\"topic_odom_in\"             default=\"odom_in\"/&gt;\n  &lt;arg name=\"calib_odom_file\"           default=\"\"/&gt;\n  &lt;arg name=\"publish_odom_tf\"           default=\"true\"/&gt;\n\n  &lt;arg name=\"stereo_module/exposure/1\"  default=\"7500\"/&gt;\n  &lt;arg name=\"stereo_module/gain/1\"      default=\"16\"/&gt;\n  &lt;arg name=\"stereo_module/exposure/2\"  default=\"1\"/&gt;\n  &lt;arg name=\"stereo_module/gain/2\"      default=\"16\"/&gt;\n\n\n\n  &lt;group ns=\"$(arg camera)\"&gt;\n\n    &lt;include file=\"$(find realsense2_camera)/launch/includes/nodelet.launch.xml\"&gt;\n\n      &lt;arg name=\"tf_prefix\"                value=\"$(arg tf_prefix)\"/&gt;\n      &lt;arg name=\"external_manager\"         value=\"$(arg external_manager)\"/&gt;\n      &lt;arg name=\"manager\"                  value=\"$(arg manager)\"/&gt;\n      &lt;arg name=\"output\"                   value=\"$(arg output)\"/&gt;\n      &lt;arg name=\"respawn\"                  value=\"$(arg respawn)\"/&gt;\n      &lt;arg name=\"serial_no\"                value=\"$(arg serial_no)\"/&gt;\n      &lt;arg name=\"usb_port_id\"              value=\"$(arg usb_port_id)\"/&gt;\n      &lt;arg name=\"device_type\"              value=\"$(arg device_type)\"/&gt;\n      &lt;arg name=\"json_file_path\"           value=\"$(arg json_file_path)\"/&gt;\n\n      &lt;arg name=\"enable_pointcloud\"        value=\"$(arg enable_pointcloud)\"/&gt;\n      &lt;arg name=\"pointcloud_texture_stream\"value=\"$(arg pointcloud_texture_stream)\"/&gt;\n      &lt;arg name=\"pointcloud_texture_index\" value=\"$(arg pointcloud_texture_index)\"/&gt;\n      &lt;arg name=\"enable_sync\"              value=\"$(arg enable_sync)\"/&gt;\n      &lt;arg name=\"align_depth\"              value=\"$(arg align_depth)\"/&gt;\n\n      &lt;arg name=\"fisheye_width\"            value=\"$(arg fisheye_width)\"/&gt;\n      &lt;arg name=\"fisheye_height\"           value=\"$(arg fisheye_height)\"/&gt;\n      &lt;arg name=\"enable_fisheye\"           value=\"$(arg enable_fisheye)\"/&gt;\n\n      &lt;arg name=\"depth_width\"              value=\"$(arg depth_width)\"/&gt;\n      &lt;arg name=\"depth_height\"             value=\"$(arg depth_height)\"/&gt;\n      &lt;arg name=\"enable_depth\"             value=\"$(arg enable_depth)\"/&gt;\n\n      &lt;arg name=\"confidence_width\"         value=\"$(arg confidence_width)\"/&gt;\n      &lt;arg name=\"confidence_height\"        value=\"$(arg confidence_height)\"/&gt;\n      &lt;arg name=\"enable_confidence\"        value=\"$(arg enable_confidence)\"/&gt;\n      &lt;arg name=\"confidence_fps\"           value=\"$(arg confidence_fps)\"/&gt;\n\n      &lt;arg name=\"color_width\"              value=\"$(arg color_width)\"/&gt;\n      &lt;arg name=\"color_height\"             value=\"$(arg color_height)\"/&gt;\n      &lt;arg name=\"enable_color\"             value=\"$(arg enable_color)\"/&gt;\n\n      &lt;arg name=\"infra_width\"              value=\"$(arg infra_width)\"/&gt;\n      &lt;arg name=\"infra_height\"             value=\"$(arg infra_height)\"/&gt;\n      &lt;arg name=\"enable_infra\"             value=\"$(arg enable_infra)\"/&gt;\n      &lt;arg name=\"enable_infra1\"            value=\"$(arg enable_infra1)\"/&gt;\n      &lt;arg name=\"enable_infra2\"            value=\"$(arg enable_infra2)\"/&gt;\n      &lt;arg name=\"infra_rgb\"                value=\"$(arg infra_rgb)\"/&gt;\n\n      &lt;arg name=\"fisheye_fps\"              value=\"$(arg fisheye_fps)\"/&gt;\n      &lt;arg name=\"depth_fps\"                value=\"$(arg depth_fps)\"/&gt;\n      &lt;arg name=\"infra_fps\"                value=\"$(arg infra_fps)\"/&gt;\n      &lt;arg name=\"color_fps\"                value=\"$(arg color_fps)\"/&gt;\n      &lt;arg name=\"gyro_fps\"                 value=\"$(arg gyro_fps)\"/&gt;\n      &lt;arg name=\"accel_fps\"                value=\"$(arg accel_fps)\"/&gt;\n      &lt;arg name=\"enable_gyro\"              value=\"$(arg enable_gyro)\"/&gt;\n      &lt;arg name=\"enable_accel\"             value=\"$(arg enable_accel)\"/&gt;\n\n      &lt;arg name=\"publish_tf\"               value=\"$(arg publish_tf)\"/&gt;\n      &lt;arg name=\"tf_publish_rate\"          value=\"$(arg tf_publish_rate)\"/&gt;\n\n      &lt;arg name=\"filters\"                  value=\"$(arg filters)\"/&gt;\n      &lt;arg name=\"clip_distance\"            value=\"$(arg clip_distance)\"/&gt;\n      &lt;arg name=\"linear_accel_cov\"         value=\"$(arg linear_accel_cov)\"/&gt;\n      &lt;arg name=\"initial_reset\"            value=\"$(arg initial_reset)\"/&gt;\n      &lt;arg name=\"reconnect_timeout\"        value=\"$(arg reconnect_timeout)\"/&gt;\n      &lt;arg name=\"wait_for_device_timeout\"  value=\"$(arg wait_for_device_timeout)\"/&gt;\n      &lt;arg name=\"unite_imu_method\"         value=\"$(arg unite_imu_method)\"/&gt;\n      &lt;arg name=\"topic_odom_in\"            value=\"$(arg topic_odom_in)\"/&gt;\n      &lt;arg name=\"calib_odom_file\"          value=\"$(arg calib_odom_file)\"/&gt;\n      &lt;arg name=\"publish_odom_tf\"          value=\"$(arg publish_odom_tf)\"/&gt;\n      &lt;arg name=\"stereo_module/exposure/1\" value=\"$(arg stereo_module/exposure/1)\"/&gt;\n      &lt;arg name=\"stereo_module/gain/1\"     value=\"$(arg stereo_module/gain/1)\"/&gt;\n      &lt;arg name=\"stereo_module/exposure/2\" value=\"$(arg stereo_module/exposure/2)\"/&gt;\n      &lt;arg name=\"stereo_module/gain/2\"     value=\"$(arg stereo_module/gain/2)\"/&gt;\n\n      &lt;arg name=\"allow_no_texture_points\"  value=\"$(arg allow_no_texture_points)\"/&gt;\n      &lt;arg name=\"ordered_pc\"               value=\"$(arg ordered_pc)\"/&gt;\n\n    &lt;/include&gt;\n\n  &lt;/group&gt;\n\n&lt;/launch&gt;\n</code></pre>"},{"location":"content/sensors/rgbd/intel_realsense_d455/#ros-2-foxy_1","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\n\nros2 launch realsense2_camera rs_launch.py\n</code></pre> rplidar_s2_launch.py<pre><code># License: Apache 2.0. See LICENSE file in root directory.\n# Copyright(c) 2022 Intel Corporation. All Rights Reserved.\n\n\"\"\"Launch realsense2_camera node.\"\"\"\nimport os\nfrom launch import LaunchDescription\nfrom ament_index_python.packages import get_package_share_directory\nimport launch_ros.actions\nfrom launch.actions import DeclareLaunchArgument\nfrom launch.substitutions import LaunchConfiguration, PythonExpression\nfrom launch.conditions import IfCondition\n\n\nconfigurable_parameters = [{'name': 'camera_name',                   'default': 'camera', 'description': 'camera unique name'},\n                           {'name': 'serial_no',                     'default': \"''\", 'description': 'choose device by serial number'},\n                           {'name': 'usb_port_id',                   'default': \"''\", 'description': 'choose device by usb port id'},\n                           {'name': 'device_type',                   'default': \"''\", 'description': 'choose device by type'},\n                           {'name': 'config_file',                   'default': \"''\", 'description': 'yaml config file'},\n                           {'name': 'unite_imu_method',              'default': \"0\", 'description': '[0-None, 1-copy, 2-linear_interpolation]'},\n                           {'name': 'json_file_path',                'default': \"''\", 'description': 'allows advanced configuration'},\n                           {'name': 'log_level',                     'default': 'info', 'description': 'debug log level [DEBUG|INFO|WARN|ERROR|FATAL]'},\n                           {'name': 'output',                        'default': 'screen', 'description': 'pipe node output [screen|log]'},\n                           {'name': 'depth_module.profile',          'default': '0,0,0', 'description': 'depth module profile'},\n                           {'name': 'enable_depth',                  'default': 'true', 'description': 'enable depth stream'},\n                           {'name': 'rgb_camera.profile',            'default': '0,0,0', 'description': 'color image width'},\n                           {'name': 'enable_color',                  'default': 'true', 'description': 'enable color stream'},\n                           {'name': 'enable_infra1',                 'default': 'false', 'description': 'enable infra1 stream'},\n                           {'name': 'enable_infra2',                 'default': 'false', 'description': 'enable infra2 stream'},\n                           {'name': 'infra_rgb',                     'default': 'false', 'description': 'enable infra2 stream'},\n                           {'name': 'tracking_module.profile',       'default': '0,0,0', 'description': 'fisheye width'},\n                           {'name': 'enable_fisheye1',               'default': 'true', 'description': 'enable fisheye1 stream'},\n                           {'name': 'enable_fisheye2',               'default': 'true', 'description': 'enable fisheye2 stream'},\n                           {'name': 'enable_confidence',             'default': 'true', 'description': 'enable depth stream'},\n                           {'name': 'gyro_fps',                      'default': '0', 'description': \"''\"},\n                           {'name': 'accel_fps',                     'default': '0', 'description': \"''\"},\n                           {'name': 'enable_gyro',                   'default': 'false', 'description': \"''\"},\n                           {'name': 'enable_accel',                  'default': 'false', 'description': \"''\"},\n                           {'name': 'enable_pose',                   'default': 'true', 'description': \"''\"},\n                           {'name': 'pose_fps',                      'default': '200', 'description': \"''\"},\n                           {'name': 'pointcloud.enable',             'default': 'false', 'description': ''},\n                           {'name': 'pointcloud.stream_filter',      'default': '2', 'description': 'texture stream for pointcloud'},\n                           {'name': 'pointcloud.stream_index_filter','default': '0', 'description': 'texture stream index for pointcloud'},\n                           {'name': 'enable_sync',                   'default': 'false', 'description': \"''\"},\n                           {'name': 'align_depth.enable',            'default': 'false', 'description': \"''\"},\n                           {'name': 'colorizer.enable',              'default': 'false', 'description': \"''\"},\n                           {'name': 'clip_distance',                 'default': '-2.', 'description': \"''\"},\n                           {'name': 'linear_accel_cov',              'default': '0.01', 'description': \"''\"},\n                           {'name': 'initial_reset',                 'default': 'false', 'description': \"''\"},\n                           {'name': 'allow_no_texture_points',       'default': 'false', 'description': \"''\"},\n                           {'name': 'ordered_pc',                    'default': 'false', 'description': ''},\n                           {'name': 'calib_odom_file',               'default': \"''\", 'description': \"''\"},\n                           {'name': 'topic_odom_in',                 'default': \"''\", 'description': 'topic for T265 wheel odometry'},\n                           {'name': 'tf_publish_rate',               'default': '0.0', 'description': 'Rate of publishing static_tf'},\n                           {'name': 'diagnostics_period',            'default': '0.0', 'description': 'Rate of publishing diagnostics. 0=Disabled'},\n                           {'name': 'decimation_filter.enable',      'default': 'false', 'description': 'Rate of publishing static_tf'},\n                           {'name': 'rosbag_filename',               'default': \"''\", 'description': 'A realsense bagfile to run from as a device'},\n                           {'name': 'depth_module.exposure.1',       'default': '7500', 'description': 'Initial value for hdr_merge filter'},\n                           {'name': 'depth_module.gain.1',           'default': '16', 'description': 'Initial value for hdr_merge filter'},\n                           {'name': 'depth_module.exposure.2',       'default': '1', 'description': 'Initial value for hdr_merge filter'},\n                           {'name': 'depth_module.gain.2',           'default': '16', 'description': 'Initial value for hdr_merge filter'},\n                           {'name': 'wait_for_device_timeout',       'default': '-1.', 'description': 'Timeout for waiting for device to connect (Seconds)'},\n                           {'name': 'reconnect_timeout',             'default': '6.', 'description': 'Timeout(seconds) between consequtive reconnection attempts'},\n                          ]\n\ndef declare_configurable_parameters(parameters):\n    return [DeclareLaunchArgument(param['name'], default_value=param['default'], description=param['description']) for param in parameters]\n\ndef set_configurable_parameters(parameters):\n    return dict([(param['name'], LaunchConfiguration(param['name'])) for param in parameters])\n\ndef generate_launch_description():\n    log_level = 'info'\n    if (os.getenv('ROS_DISTRO') == \"dashing\") or (os.getenv('ROS_DISTRO') == \"eloquent\"):\n        return LaunchDescription(declare_configurable_parameters(configurable_parameters) + [\n            # Realsense\n            launch_ros.actions.Node(\n                condition=IfCondition(PythonExpression([LaunchConfiguration('config_file'), \" == ''\"])),\n                package='realsense2_camera',\n                node_namespace=LaunchConfiguration(\"camera_name\"),\n                node_name=LaunchConfiguration(\"camera_name\"),\n                node_executable='realsense2_camera_node',\n                prefix=['stdbuf -o L'],\n                parameters=[set_configurable_parameters(configurable_parameters)\n                            ],\n                output='screen',\n                arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],\n                ),\n            launch_ros.actions.Node(\n                condition=IfCondition(PythonExpression([LaunchConfiguration('config_file'), \" != ''\"])),\n                package='realsense2_camera',\n                node_namespace=LaunchConfiguration(\"camera_name\"),\n                node_name=LaunchConfiguration(\"camera_name\"),\n                node_executable='realsense2_camera_node',\n                prefix=['stdbuf -o L'],\n                parameters=[set_configurable_parameters(configurable_parameters)\n                            , PythonExpression([LaunchConfiguration(\"config_file\")])\n                            ],\n                output='screen',\n                arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],\n                ),\n            ])\n    else:\n        return LaunchDescription(declare_configurable_parameters(configurable_parameters) + [\n            # Realsense\n            launch_ros.actions.Node(\n                condition=IfCondition(PythonExpression([LaunchConfiguration('config_file'), \" == ''\"])),\n                package='realsense2_camera',\n                namespace=LaunchConfiguration(\"camera_name\"),\n                name=LaunchConfiguration(\"camera_name\"),\n                executable='realsense2_camera_node',\n                parameters=[set_configurable_parameters(configurable_parameters)\n                            ],\n                output='screen',\n                arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],\n                emulate_tty=True,\n                ),\n            launch_ros.actions.Node(\n                condition=IfCondition(PythonExpression([LaunchConfiguration('config_file'), \" != ''\"])),\n                package='realsense2_camera',\n                namespace=LaunchConfiguration(\"camera_name\"),\n                name=LaunchConfiguration(\"camera_name\"),\n                executable='realsense2_camera_node',\n                parameters=[set_configurable_parameters(configurable_parameters)\n                            , PythonExpression([LaunchConfiguration(\"config_file\")])\n                            ],\n                output='screen',\n                arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],\n                emulate_tty=True,\n                ),\n        ])\n</code></pre>"},{"location":"content/sensors/rgbd/intel_realsense_l515/","title":"Intel RealSense L515","text":""},{"location":"content/sensors/rgbd/intel_realsense_l515/#links","title":"Links","text":"<ul> <li>Intel RealSense L515</li> <li>Intel RealSense Documentation</li> </ul>"},{"location":"content/sensors/rgbd/intel_realsense_l515/#documents","title":"Documents","text":"<ul> <li>Intel RealSense L515 Datasheet</li> <li>Intel RealSense L515 3D Model (STEP)</li> </ul>"},{"location":"content/sensors/rgbd/intel_realsense_l515/#setup","title":"Setup","text":""},{"location":"content/sensors/rgbd/intel_realsense_l515/#ros-1-noetic","title":"ROS 1 Noetic","text":"<pre><code>sudo apt install ros-noetic-realsense2-camera ros-noetic-realsense2-description\n</code></pre>"},{"location":"content/sensors/rgbd/intel_realsense_l515/#ros-2-foxy","title":"ROS 2 Foxy","text":"<pre><code>sudo apt install ros-foxy-realsense2-camera ros-foxy-realsense2-description\n</code></pre>"},{"location":"content/sensors/rgbd/intel_realsense_l515/#launch","title":"Launch","text":""},{"location":"content/sensors/rgbd/intel_realsense_l515/#ros-1-noetic_1","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\n\nroslaunch realsense2_camera rs_camera.launch\n</code></pre> rs_camera.launch<pre><code>&lt;launch&gt;\n\n  &lt;arg name=\"serial_no\"           default=\"\"/&gt;\n  &lt;arg name=\"usb_port_id\"         default=\"\"/&gt;\n  &lt;arg name=\"device_type\"         default=\"\"/&gt;\n  &lt;arg name=\"json_file_path\"      default=\"\"/&gt;\n  &lt;arg name=\"camera\"              default=\"camera\"/&gt;\n  &lt;arg name=\"tf_prefix\"           default=\"$(arg camera)\"/&gt;\n  &lt;arg name=\"external_manager\"    default=\"false\"/&gt;\n  &lt;arg name=\"manager\"             default=\"realsense2_camera_manager\"/&gt;\n  &lt;arg name=\"output\"              default=\"screen\"/&gt;\n  &lt;arg name=\"respawn\"             default=\"false\"/&gt;\n\n  &lt;arg name=\"fisheye_width\"       default=\"-1\"/&gt;\n  &lt;arg name=\"fisheye_height\"      default=\"-1\"/&gt;\n  &lt;arg name=\"enable_fisheye\"      default=\"false\"/&gt;\n\n  &lt;arg name=\"depth_width\"         default=\"-1\"/&gt;\n  &lt;arg name=\"depth_height\"        default=\"-1\"/&gt;\n  &lt;arg name=\"enable_depth\"        default=\"true\"/&gt;\n\n  &lt;arg name=\"confidence_width\"    default=\"-1\"/&gt;\n  &lt;arg name=\"confidence_height\"   default=\"-1\"/&gt;\n  &lt;arg name=\"enable_confidence\"   default=\"true\"/&gt;\n  &lt;arg name=\"confidence_fps\"      default=\"-1\"/&gt;\n\n  &lt;arg name=\"infra_width\"         default=\"848\"/&gt;\n  &lt;arg name=\"infra_height\"        default=\"480\"/&gt;\n  &lt;arg name=\"enable_infra\"        default=\"false\"/&gt;\n  &lt;arg name=\"enable_infra1\"       default=\"false\"/&gt;\n  &lt;arg name=\"enable_infra2\"       default=\"false\"/&gt;\n  &lt;arg name=\"infra_rgb\"           default=\"false\"/&gt;\n\n  &lt;arg name=\"color_width\"         default=\"-1\"/&gt;\n  &lt;arg name=\"color_height\"        default=\"-1\"/&gt;\n  &lt;arg name=\"enable_color\"        default=\"true\"/&gt;\n\n  &lt;arg name=\"fisheye_fps\"         default=\"-1\"/&gt;\n  &lt;arg name=\"depth_fps\"           default=\"-1\"/&gt;\n  &lt;arg name=\"infra_fps\"           default=\"30\"/&gt;\n  &lt;arg name=\"color_fps\"           default=\"-1\"/&gt;\n  &lt;arg name=\"gyro_fps\"            default=\"-1\"/&gt;\n  &lt;arg name=\"accel_fps\"           default=\"-1\"/&gt;\n  &lt;arg name=\"enable_gyro\"         default=\"false\"/&gt;\n  &lt;arg name=\"enable_accel\"        default=\"false\"/&gt;\n\n  &lt;arg name=\"enable_pointcloud\"         default=\"false\"/&gt;\n  &lt;arg name=\"pointcloud_texture_stream\" default=\"RS2_STREAM_COLOR\"/&gt;\n  &lt;arg name=\"pointcloud_texture_index\"  default=\"0\"/&gt;\n  &lt;arg name=\"allow_no_texture_points\"   default=\"false\"/&gt;\n  &lt;arg name=\"ordered_pc\"                default=\"false\"/&gt;\n\n  &lt;arg name=\"enable_sync\"               default=\"false\"/&gt;\n  &lt;arg name=\"align_depth\"               default=\"false\"/&gt;\n\n  &lt;arg name=\"publish_tf\"                default=\"true\"/&gt;\n  &lt;arg name=\"tf_publish_rate\"           default=\"0\"/&gt;\n\n  &lt;arg name=\"filters\"                   default=\"\"/&gt;\n  &lt;arg name=\"clip_distance\"             default=\"-2\"/&gt;\n  &lt;arg name=\"linear_accel_cov\"          default=\"0.01\"/&gt;\n  &lt;arg name=\"initial_reset\"             default=\"false\"/&gt;\n  &lt;arg name=\"reconnect_timeout\"         default=\"6.0\"/&gt;\n  &lt;arg name=\"wait_for_device_timeout\"   default=\"-1.0\"/&gt;\n  &lt;arg name=\"unite_imu_method\"          default=\"\"/&gt;\n  &lt;arg name=\"topic_odom_in\"             default=\"odom_in\"/&gt;\n  &lt;arg name=\"calib_odom_file\"           default=\"\"/&gt;\n  &lt;arg name=\"publish_odom_tf\"           default=\"true\"/&gt;\n\n  &lt;arg name=\"stereo_module/exposure/1\"  default=\"7500\"/&gt;\n  &lt;arg name=\"stereo_module/gain/1\"      default=\"16\"/&gt;\n  &lt;arg name=\"stereo_module/exposure/2\"  default=\"1\"/&gt;\n  &lt;arg name=\"stereo_module/gain/2\"      default=\"16\"/&gt;\n\n\n\n  &lt;group ns=\"$(arg camera)\"&gt;\n\n    &lt;include file=\"$(find realsense2_camera)/launch/includes/nodelet.launch.xml\"&gt;\n\n      &lt;arg name=\"tf_prefix\"                value=\"$(arg tf_prefix)\"/&gt;\n      &lt;arg name=\"external_manager\"         value=\"$(arg external_manager)\"/&gt;\n      &lt;arg name=\"manager\"                  value=\"$(arg manager)\"/&gt;\n      &lt;arg name=\"output\"                   value=\"$(arg output)\"/&gt;\n      &lt;arg name=\"respawn\"                  value=\"$(arg respawn)\"/&gt;\n      &lt;arg name=\"serial_no\"                value=\"$(arg serial_no)\"/&gt;\n      &lt;arg name=\"usb_port_id\"              value=\"$(arg usb_port_id)\"/&gt;\n      &lt;arg name=\"device_type\"              value=\"$(arg device_type)\"/&gt;\n      &lt;arg name=\"json_file_path\"           value=\"$(arg json_file_path)\"/&gt;\n\n      &lt;arg name=\"enable_pointcloud\"        value=\"$(arg enable_pointcloud)\"/&gt;\n      &lt;arg name=\"pointcloud_texture_stream\"value=\"$(arg pointcloud_texture_stream)\"/&gt;\n      &lt;arg name=\"pointcloud_texture_index\" value=\"$(arg pointcloud_texture_index)\"/&gt;\n      &lt;arg name=\"enable_sync\"              value=\"$(arg enable_sync)\"/&gt;\n      &lt;arg name=\"align_depth\"              value=\"$(arg align_depth)\"/&gt;\n\n      &lt;arg name=\"fisheye_width\"            value=\"$(arg fisheye_width)\"/&gt;\n      &lt;arg name=\"fisheye_height\"           value=\"$(arg fisheye_height)\"/&gt;\n      &lt;arg name=\"enable_fisheye\"           value=\"$(arg enable_fisheye)\"/&gt;\n\n      &lt;arg name=\"depth_width\"              value=\"$(arg depth_width)\"/&gt;\n      &lt;arg name=\"depth_height\"             value=\"$(arg depth_height)\"/&gt;\n      &lt;arg name=\"enable_depth\"             value=\"$(arg enable_depth)\"/&gt;\n\n      &lt;arg name=\"confidence_width\"         value=\"$(arg confidence_width)\"/&gt;\n      &lt;arg name=\"confidence_height\"        value=\"$(arg confidence_height)\"/&gt;\n      &lt;arg name=\"enable_confidence\"        value=\"$(arg enable_confidence)\"/&gt;\n      &lt;arg name=\"confidence_fps\"           value=\"$(arg confidence_fps)\"/&gt;\n\n      &lt;arg name=\"color_width\"              value=\"$(arg color_width)\"/&gt;\n      &lt;arg name=\"color_height\"             value=\"$(arg color_height)\"/&gt;\n      &lt;arg name=\"enable_color\"             value=\"$(arg enable_color)\"/&gt;\n\n      &lt;arg name=\"infra_width\"              value=\"$(arg infra_width)\"/&gt;\n      &lt;arg name=\"infra_height\"             value=\"$(arg infra_height)\"/&gt;\n      &lt;arg name=\"enable_infra\"             value=\"$(arg enable_infra)\"/&gt;\n      &lt;arg name=\"enable_infra1\"            value=\"$(arg enable_infra1)\"/&gt;\n      &lt;arg name=\"enable_infra2\"            value=\"$(arg enable_infra2)\"/&gt;\n      &lt;arg name=\"infra_rgb\"                value=\"$(arg infra_rgb)\"/&gt;\n\n      &lt;arg name=\"fisheye_fps\"              value=\"$(arg fisheye_fps)\"/&gt;\n      &lt;arg name=\"depth_fps\"                value=\"$(arg depth_fps)\"/&gt;\n      &lt;arg name=\"infra_fps\"                value=\"$(arg infra_fps)\"/&gt;\n      &lt;arg name=\"color_fps\"                value=\"$(arg color_fps)\"/&gt;\n      &lt;arg name=\"gyro_fps\"                 value=\"$(arg gyro_fps)\"/&gt;\n      &lt;arg name=\"accel_fps\"                value=\"$(arg accel_fps)\"/&gt;\n      &lt;arg name=\"enable_gyro\"              value=\"$(arg enable_gyro)\"/&gt;\n      &lt;arg name=\"enable_accel\"             value=\"$(arg enable_accel)\"/&gt;\n\n      &lt;arg name=\"publish_tf\"               value=\"$(arg publish_tf)\"/&gt;\n      &lt;arg name=\"tf_publish_rate\"          value=\"$(arg tf_publish_rate)\"/&gt;\n\n      &lt;arg name=\"filters\"                  value=\"$(arg filters)\"/&gt;\n      &lt;arg name=\"clip_distance\"            value=\"$(arg clip_distance)\"/&gt;\n      &lt;arg name=\"linear_accel_cov\"         value=\"$(arg linear_accel_cov)\"/&gt;\n      &lt;arg name=\"initial_reset\"            value=\"$(arg initial_reset)\"/&gt;\n      &lt;arg name=\"reconnect_timeout\"        value=\"$(arg reconnect_timeout)\"/&gt;\n      &lt;arg name=\"wait_for_device_timeout\"  value=\"$(arg wait_for_device_timeout)\"/&gt;\n      &lt;arg name=\"unite_imu_method\"         value=\"$(arg unite_imu_method)\"/&gt;\n      &lt;arg name=\"topic_odom_in\"            value=\"$(arg topic_odom_in)\"/&gt;\n      &lt;arg name=\"calib_odom_file\"          value=\"$(arg calib_odom_file)\"/&gt;\n      &lt;arg name=\"publish_odom_tf\"          value=\"$(arg publish_odom_tf)\"/&gt;\n      &lt;arg name=\"stereo_module/exposure/1\" value=\"$(arg stereo_module/exposure/1)\"/&gt;\n      &lt;arg name=\"stereo_module/gain/1\"     value=\"$(arg stereo_module/gain/1)\"/&gt;\n      &lt;arg name=\"stereo_module/exposure/2\" value=\"$(arg stereo_module/exposure/2)\"/&gt;\n      &lt;arg name=\"stereo_module/gain/2\"     value=\"$(arg stereo_module/gain/2)\"/&gt;\n\n      &lt;arg name=\"allow_no_texture_points\"  value=\"$(arg allow_no_texture_points)\"/&gt;\n      &lt;arg name=\"ordered_pc\"               value=\"$(arg ordered_pc)\"/&gt;\n\n    &lt;/include&gt;\n\n  &lt;/group&gt;\n\n&lt;/launch&gt;\n</code></pre>"},{"location":"content/sensors/rgbd/intel_realsense_l515/#ros-2-foxy_1","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\n\nros2 launch realsense2_camera rs_launch.py\n</code></pre> rplidar_s2_launch.py<pre><code># License: Apache 2.0. See LICENSE file in root directory.\n# Copyright(c) 2022 Intel Corporation. All Rights Reserved.\n\n\"\"\"Launch realsense2_camera node.\"\"\"\nimport os\nfrom launch import LaunchDescription\nfrom ament_index_python.packages import get_package_share_directory\nimport launch_ros.actions\nfrom launch.actions import DeclareLaunchArgument\nfrom launch.substitutions import LaunchConfiguration, PythonExpression\nfrom launch.conditions import IfCondition\n\n\nconfigurable_parameters = [{'name': 'camera_name',                   'default': 'camera', 'description': 'camera unique name'},\n                           {'name': 'serial_no',                     'default': \"''\", 'description': 'choose device by serial number'},\n                           {'name': 'usb_port_id',                   'default': \"''\", 'description': 'choose device by usb port id'},\n                           {'name': 'device_type',                   'default': \"''\", 'description': 'choose device by type'},\n                           {'name': 'config_file',                   'default': \"''\", 'description': 'yaml config file'},\n                           {'name': 'unite_imu_method',              'default': \"0\", 'description': '[0-None, 1-copy, 2-linear_interpolation]'},\n                           {'name': 'json_file_path',                'default': \"''\", 'description': 'allows advanced configuration'},\n                           {'name': 'log_level',                     'default': 'info', 'description': 'debug log level [DEBUG|INFO|WARN|ERROR|FATAL]'},\n                           {'name': 'output',                        'default': 'screen', 'description': 'pipe node output [screen|log]'},\n                           {'name': 'depth_module.profile',          'default': '0,0,0', 'description': 'depth module profile'},\n                           {'name': 'enable_depth',                  'default': 'true', 'description': 'enable depth stream'},\n                           {'name': 'rgb_camera.profile',            'default': '0,0,0', 'description': 'color image width'},\n                           {'name': 'enable_color',                  'default': 'true', 'description': 'enable color stream'},\n                           {'name': 'enable_infra1',                 'default': 'false', 'description': 'enable infra1 stream'},\n                           {'name': 'enable_infra2',                 'default': 'false', 'description': 'enable infra2 stream'},\n                           {'name': 'infra_rgb',                     'default': 'false', 'description': 'enable infra2 stream'},\n                           {'name': 'tracking_module.profile',       'default': '0,0,0', 'description': 'fisheye width'},\n                           {'name': 'enable_fisheye1',               'default': 'true', 'description': 'enable fisheye1 stream'},\n                           {'name': 'enable_fisheye2',               'default': 'true', 'description': 'enable fisheye2 stream'},\n                           {'name': 'enable_confidence',             'default': 'true', 'description': 'enable depth stream'},\n                           {'name': 'gyro_fps',                      'default': '0', 'description': \"''\"},\n                           {'name': 'accel_fps',                     'default': '0', 'description': \"''\"},\n                           {'name': 'enable_gyro',                   'default': 'false', 'description': \"''\"},\n                           {'name': 'enable_accel',                  'default': 'false', 'description': \"''\"},\n                           {'name': 'enable_pose',                   'default': 'true', 'description': \"''\"},\n                           {'name': 'pose_fps',                      'default': '200', 'description': \"''\"},\n                           {'name': 'pointcloud.enable',             'default': 'false', 'description': ''},\n                           {'name': 'pointcloud.stream_filter',      'default': '2', 'description': 'texture stream for pointcloud'},\n                           {'name': 'pointcloud.stream_index_filter','default': '0', 'description': 'texture stream index for pointcloud'},\n                           {'name': 'enable_sync',                   'default': 'false', 'description': \"''\"},\n                           {'name': 'align_depth.enable',            'default': 'false', 'description': \"''\"},\n                           {'name': 'colorizer.enable',              'default': 'false', 'description': \"''\"},\n                           {'name': 'clip_distance',                 'default': '-2.', 'description': \"''\"},\n                           {'name': 'linear_accel_cov',              'default': '0.01', 'description': \"''\"},\n                           {'name': 'initial_reset',                 'default': 'false', 'description': \"''\"},\n                           {'name': 'allow_no_texture_points',       'default': 'false', 'description': \"''\"},\n                           {'name': 'ordered_pc',                    'default': 'false', 'description': ''},\n                           {'name': 'calib_odom_file',               'default': \"''\", 'description': \"''\"},\n                           {'name': 'topic_odom_in',                 'default': \"''\", 'description': 'topic for T265 wheel odometry'},\n                           {'name': 'tf_publish_rate',               'default': '0.0', 'description': 'Rate of publishing static_tf'},\n                           {'name': 'diagnostics_period',            'default': '0.0', 'description': 'Rate of publishing diagnostics. 0=Disabled'},\n                           {'name': 'decimation_filter.enable',      'default': 'false', 'description': 'Rate of publishing static_tf'},\n                           {'name': 'rosbag_filename',               'default': \"''\", 'description': 'A realsense bagfile to run from as a device'},\n                           {'name': 'depth_module.exposure.1',       'default': '7500', 'description': 'Initial value for hdr_merge filter'},\n                           {'name': 'depth_module.gain.1',           'default': '16', 'description': 'Initial value for hdr_merge filter'},\n                           {'name': 'depth_module.exposure.2',       'default': '1', 'description': 'Initial value for hdr_merge filter'},\n                           {'name': 'depth_module.gain.2',           'default': '16', 'description': 'Initial value for hdr_merge filter'},\n                           {'name': 'wait_for_device_timeout',       'default': '-1.', 'description': 'Timeout for waiting for device to connect (Seconds)'},\n                           {'name': 'reconnect_timeout',             'default': '6.', 'description': 'Timeout(seconds) between consequtive reconnection attempts'},\n                          ]\n\ndef declare_configurable_parameters(parameters):\n    return [DeclareLaunchArgument(param['name'], default_value=param['default'], description=param['description']) for param in parameters]\n\ndef set_configurable_parameters(parameters):\n    return dict([(param['name'], LaunchConfiguration(param['name'])) for param in parameters])\n\ndef generate_launch_description():\n    log_level = 'info'\n    if (os.getenv('ROS_DISTRO') == \"dashing\") or (os.getenv('ROS_DISTRO') == \"eloquent\"):\n        return LaunchDescription(declare_configurable_parameters(configurable_parameters) + [\n            # Realsense\n            launch_ros.actions.Node(\n                condition=IfCondition(PythonExpression([LaunchConfiguration('config_file'), \" == ''\"])),\n                package='realsense2_camera',\n                node_namespace=LaunchConfiguration(\"camera_name\"),\n                node_name=LaunchConfiguration(\"camera_name\"),\n                node_executable='realsense2_camera_node',\n                prefix=['stdbuf -o L'],\n                parameters=[set_configurable_parameters(configurable_parameters)\n                            ],\n                output='screen',\n                arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],\n                ),\n            launch_ros.actions.Node(\n                condition=IfCondition(PythonExpression([LaunchConfiguration('config_file'), \" != ''\"])),\n                package='realsense2_camera',\n                node_namespace=LaunchConfiguration(\"camera_name\"),\n                node_name=LaunchConfiguration(\"camera_name\"),\n                node_executable='realsense2_camera_node',\n                prefix=['stdbuf -o L'],\n                parameters=[set_configurable_parameters(configurable_parameters)\n                            , PythonExpression([LaunchConfiguration(\"config_file\")])\n                            ],\n                output='screen',\n                arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],\n                ),\n            ])\n    else:\n        return LaunchDescription(declare_configurable_parameters(configurable_parameters) + [\n            # Realsense\n            launch_ros.actions.Node(\n                condition=IfCondition(PythonExpression([LaunchConfiguration('config_file'), \" == ''\"])),\n                package='realsense2_camera',\n                namespace=LaunchConfiguration(\"camera_name\"),\n                name=LaunchConfiguration(\"camera_name\"),\n                executable='realsense2_camera_node',\n                parameters=[set_configurable_parameters(configurable_parameters)\n                            ],\n                output='screen',\n                arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],\n                emulate_tty=True,\n                ),\n            launch_ros.actions.Node(\n                condition=IfCondition(PythonExpression([LaunchConfiguration('config_file'), \" != ''\"])),\n                package='realsense2_camera',\n                namespace=LaunchConfiguration(\"camera_name\"),\n                name=LaunchConfiguration(\"camera_name\"),\n                executable='realsense2_camera_node',\n                parameters=[set_configurable_parameters(configurable_parameters)\n                            , PythonExpression([LaunchConfiguration(\"config_file\")])\n                            ],\n                output='screen',\n                arguments=['--ros-args', '--log-level', LaunchConfiguration('log_level')],\n                emulate_tty=True,\n                ),\n        ])\n</code></pre>"},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/","title":"Luxonis OAK-D Pro","text":""},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#links","title":"Links","text":"<ul> <li>OAK-D Pro Fixed-Focus</li> <li>OAK-D Pro Documentation</li> <li>DepthAI ROS</li> </ul>"},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#documents","title":"Documents","text":"<ul> <li>OAK-D Pro Datasheet</li> <li>OAK-D Pro 3D Model (STEP)</li> </ul>"},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#setup","title":"Setup","text":""},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#depthai-dependencies","title":"DepthAI Dependencies","text":"<pre><code>sudo apt install python3-rosdep\nsudo rosdep init\nrosdep update\n\nsudo wget -qO- https://raw.githubusercontent.com/luxonis/depthai-ros/main/install_dependencies.sh | sudo bash\n</code></pre>"},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#ros-1-noetic","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\n\nmkdir ~/dai_ros1_ws/src -p\n\ncd ~/dai_ros1_ws/src\ngit clone --branch=noetic git@github.com:luxonis/depthai-ros.git\n\ncd ..\nrosdep install --from-paths src --ignore-src -r -y\ncatkin_make_isolated\n\nsource devel_isolated/setup.bash\n</code></pre>"},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#ros-2-foxy","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\n\nmkdir ~/dai_ros2_ws/src -p\n\ncd ~/dai_ros2_ws/src/\ngit clone --branch=foxy git@github.com:luxonis/depthai-ros.git\n\ncd ..\nrosdep install --from-paths src --ignore-src -r -y\nsudo apt install ros-foxy-camera-info-manager ros-foxy-vision-msgs -y\nMAKEFLAGS=\"-j1 -l1\" colcon build\n\nsource install/setup.bash\n</code></pre>"},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#launch","title":"Launch","text":""},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#ros-1-noetic_1","title":"ROS 1 Noetic","text":"<pre><code>source /opt/ros/noetic/setup.bash\nsource /home/user/dai_ros1_ws/devel_isolated/setup.bash\n\nroslaunch depthai_ros_driver camera.launch\n</code></pre> camera.launch<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;launch&gt;\n\n    &lt;arg name=\"publish_tf_from_calibration\" default=\"false\" /&gt;\n    &lt;arg name=\"imu_from_descr\" default=\"false\" /&gt;\n    &lt;arg name=\"override_cam_model\" default=\"false\" /&gt;\n    &lt;arg name=\"rectify_rgb\" default=\"true\" /&gt;\n    &lt;arg name=\"enable_pointcloud\" default=\"false\" /&gt;\n    &lt;arg name=\"enable_color\" default=\"true\" /&gt;\n    &lt;arg name=\"enable_depth\" default=\"true\" /&gt;\n    &lt;arg name=\"enable_infra1\" default=\"false\" /&gt;\n    &lt;arg name=\"enable_infra2\" default=\"false\" /&gt;\n    &lt;arg name=\"depth_module_depth_profile\" default=\"1280,720,30\" /&gt;\n    &lt;arg name=\"rgb_camera_color_profile\" default=\"1280,720,30\" /&gt;\n    &lt;arg name=\"depth_module_infra_profile\" default=\"1280,720,30\" /&gt;\n    &lt;arg name=\"rs_compat\" default=\"false\" /&gt;\n\n    &lt;arg name=\"name\" default=\"camera\" if=\"$(arg rs_compat)\" /&gt;\n    &lt;arg name=\"name\" default=\"oak\" unless=\"$(arg rs_compat)\" /&gt;\n\n    &lt;arg name=\"namespace\" default=\"camera\" if=\"$(arg rs_compat)\" /&gt;\n    &lt;arg name=\"namespace\" default=\"\" unless=\"$(arg rs_compat)\" /&gt;\n\n\n    &lt;arg name=\"parent_frame\" value=\"$(arg name)_link\" if=\"$(arg rs_compat)\" /&gt;\n    &lt;arg name=\"parent_frame\" default=\"oak-d-base-frame\" unless=\"$(arg rs_compat)\" /&gt;\n\n    &lt;arg name=\"points_topic_name\" value=\"$(arg name)/depth/color/points\" if=\"$(arg rs_compat)\"/&gt;\n    &lt;arg name=\"points_topic_name\" value=\"$(arg name)/points\" unless=\"$(arg rs_compat)\"/&gt;\n\n    &lt;arg name=\"color_sens_name\" value=\"color\" if=\"$(arg rs_compat)\"/&gt;\n    &lt;arg name=\"color_sens_name\" value=\"rgb\" unless=\"$(arg rs_compat)\"/&gt;\n\n    &lt;arg name=\"stereo_sens_name\" value=\"depth\" if=\"$(arg rs_compat)\" /&gt;\n    &lt;arg name=\"stereo_sens_name\" value=\"stereo\" unless=\"$(arg rs_compat)\" /&gt;\n\n    &lt;arg name=\"depth_topic_suffix\" value=\"image_rect_raw\" if=\"$(arg rs_compat)\"/&gt;\n    &lt;arg name=\"depth_topic_suffix\" value=\"image_raw\" unless=\"$(arg rs_compat)\"/&gt;\n\n\n\n    &lt;group if=\"$(arg rs_compat)\"&gt;\n        &lt;param name=\"$(arg name)/camera_i_rs_compat\" value=\"true\" /&gt;\n        &lt;param name=\"$(arg name)/pipeline_gen_i_enable_sync\" value=\"true\" /&gt;\n        &lt;param name=\"$(arg name)/color_i_synced\" value=\"true\" /&gt;\n        &lt;param name=\"$(arg name)/color_i_publish_topic\" value=\"$(arg enable_color)\" /&gt;\n        &lt;param name=\"$(arg name)/color_i_width\"\n            value=\"$(eval rgb_camera_color_profile.split(',')[0])\" /&gt;\n        &lt;param name=\"$(arg name)/color_i_height\"\n            value=\"$(eval rgb_camera_color_profile.split(',')[1])\" /&gt;\n        &lt;param name=\"$(arg name)/color_i_fps\" value=\"$(eval rgb_camera_color_profile.split(',')[2])\" /&gt;\n\n        &lt;param name=\"$(arg name)/depth_i_synced\" value=\"true\" /&gt;\n        &lt;param name=\"$(arg name)/depth_i_publish_topic\" value=\"$(arg enable_depth)\" /&gt;\n        &lt;param name=\"$(arg name)/depth_i_width\"\n            value=\"$(eval depth_module_depth_profile.split(',')[0])\" /&gt;\n        &lt;param name=\"$(arg name)/depth_i_height\"\n            value=\"$(eval depth_module_depth_profile.split(',')[1])\" /&gt;\n        &lt;param name=\"$(arg name)/depth_i_fps\"\n            value=\"$(eval depth_module_depth_profile.split(',')[2])\" /&gt;\n\n        &lt;param name=\"$(arg name)/infra1_i_publish_topic\" value=\"$(arg enable_infra1)\" /&gt;\n        &lt;param name=\"$(arg name)/infra1_i_width\"\n            value=\"$(eval depth_module_infra_profile.split(',')[0])\" /&gt;\n        &lt;param name=\"$(arg name)/infra1_i_height\"\n            value=\"$(eval depth_module_infra_profile.split(',')[1])\" /&gt;\n        &lt;param name=\"$(arg name)/infra1_i_fps\"\n            value=\"$(eval depth_module_infra_profile.split(',')[2])\" /&gt;\n\n        &lt;param name=\"$(arg name)/infra2_i_publish_topic\" value=\"$(arg enable_infra2)\" /&gt;\n        &lt;param name=\"$(arg name)/infra2_i_width\"\n            value=\"$(eval depth_module_infra_profile.split(',')[0])\" /&gt;\n        &lt;param name=\"$(arg name)/infra2_i_height\"\n            value=\"$(eval depth_module_infra_profile.split(',')[1])\" /&gt;\n        &lt;param name=\"$(arg name)/infra2_i_fps\"\n            value=\"$(eval depth_module_infra_profile.split(',')[2])\" /&gt;\n\n        &lt;param name=\"$(arg name)/depth_i_left_rect_publish_topic\" value=\"true\" /&gt;\n        &lt;param name=\"$(arg name)/depth_i_right_rect_publish_topic\" value=\"true\" /&gt;\n    &lt;/group&gt;\n\n    &lt;arg name=\"params_file\" default=\"$(find depthai_ros_driver)/config/camera.yaml\" /&gt;\n    &lt;arg name=\"camera_model\" default=\"OAK-D\" /&gt;\n\n    &lt;arg name=\"base_frame\" default=\"oak-d_frame\" /&gt;\n\n    &lt;arg name=\"cam_pos_x\" default=\"0.0\" /&gt;\n    &lt;!-- Position respect to base frame (i.e. \"base_link) --&gt;\n    &lt;arg name=\"cam_pos_y\" default=\"0.0\" /&gt;\n    &lt;!-- Position respect to base frame (i.e. \"base_link) --&gt;\n    &lt;arg name=\"cam_pos_z\" default=\"0.0\" /&gt;\n    &lt;!-- Position respect to base frame (i.e. \"base_link) --&gt;\n    &lt;arg name=\"cam_roll\" default=\"0.0\" /&gt;\n    &lt;!-- Orientation respect to base frame (i.e. \"base_link) --&gt;\n    &lt;arg name=\"cam_pitch\" default=\"0.0\" /&gt;\n    &lt;!-- Orientation respect to base frame (i.e. \"base_link) --&gt;\n    &lt;arg name=\"cam_yaw\" default=\"0.0\" /&gt;\n    &lt;!-- Orientation respect to base frame (i.e. \"base_link) --&gt;\n\n    &lt;param name=\"$(arg name)/camera_i_camera_model\" value=\"$(arg camera_model)\"\n        if=\"$(arg override_cam_model)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_base_frame\" value=\"$(arg base_frame)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_parent_frame\" value=\"$(arg parent_frame)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_cam_pos_x\" value=\"$(arg cam_pos_x)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_cam_pos_y\" value=\"$(arg cam_pos_y)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_cam_pos_z\" value=\"$(arg cam_pos_z)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_cam_roll\" value=\"$(arg cam_roll)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_cam_pitch\" value=\"$(arg cam_pitch)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_cam_yaw\" value=\"$(arg cam_yaw)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_imu_from_descr\" value=\"$(arg imu_from_descr)\" /&gt;\n    &lt;param name=\"$(arg name)/camera_i_publish_tf_from_calibration\"\n        value=\"$(arg publish_tf_from_calibration)\" /&gt;\n\n    &lt;group if=\"$(arg enable_pointcloud)\"&gt;\n        &lt;param name=\"$(arg name)/pipeline_gen_i_enable_sync\" value=\"true\" /&gt;\n        &lt;param name=\"$(arg name)/rgb_i_synced\" value=\"true\" /&gt;\n        &lt;param name=\"$(arg name)/stereo_i_synced\" value=\"true\" /&gt;\n    &lt;/group&gt;\n\n    &lt;arg name=\"launch_prefix\" default=\"\" /&gt;\n\n\n    &lt;rosparam file=\"$(arg params_file)\" /&gt;\n    &lt;node pkg=\"rosservice\" if=\"$(optenv DEPTHAI_DEBUG 0)\" type=\"rosservice\" name=\"set_log_level\"\n        args=\"call --wait /oak_nodelet_manager/set_logger_level 'ros.depthai_ros_driver' 'debug'\" /&gt;\n\n    &lt;include unless=\"$(arg publish_tf_from_calibration)\"\n        file=\"$(find depthai_descriptions)/launch/urdf.launch\"&gt;\n        &lt;arg name=\"base_frame\" value=\"$(arg  name)\" /&gt;\n        &lt;arg name=\"parent_frame\" value=\"$(arg  parent_frame)\" /&gt;\n        &lt;arg name=\"camera_model\" value=\"$(arg  camera_model)\" /&gt;\n        &lt;arg name=\"tf_prefix\" value=\"$(arg  name)\" /&gt;\n        &lt;arg name=\"cam_pos_x\" value=\"$(arg  cam_pos_x)\" /&gt;\n        &lt;arg name=\"cam_pos_y\" value=\"$(arg  cam_pos_y)\" /&gt;\n        &lt;arg name=\"cam_pos_z\" value=\"$(arg  cam_pos_z)\" /&gt;\n        &lt;arg name=\"cam_roll\" value=\"$(arg  cam_roll)\" /&gt;\n        &lt;arg name=\"cam_pitch\" value=\"$(arg  cam_pitch)\" /&gt;\n        &lt;arg name=\"cam_yaw\" value=\"$(arg  cam_yaw)\" /&gt;\n        &lt;arg name=\"rs_compat\" value=\"$(arg  rs_compat)\" /&gt;\n    &lt;/include&gt;\n\n\n    &lt;node pkg=\"nodelet\" type=\"nodelet\" name=\"$(arg  name)_nodelet_manager\"\n        launch-prefix=\"$(arg launch_prefix)\" args=\"manager\" output=\"screen\"&gt;\n        &lt;remap from=\"/nodelet_manager/load_nodelet\" to=\"$(arg name)/nodelet_manager/load_nodelet\" /&gt;\n        &lt;remap from=\"/nodelet_manager/unload_nodelet\"\n            to=\"$(arg name)/nodelet_manager/unload_nodelet\" /&gt;\n        &lt;remap from=\"/nodelet_manager/list\" to=\"$(arg name)/nodelet_manager/list\" /&gt;\n    &lt;/node&gt;\n\n    &lt;node name=\"$(arg  name)\" pkg=\"nodelet\" type=\"nodelet\" output=\"screen\" required=\"true\"\n        args=\"load depthai_ros_driver/Camera $(arg  name)_nodelet_manager\"&gt;\n    &lt;/node&gt;\n\n    &lt;node pkg=\"nodelet\" type=\"nodelet\" name=\"rectify_color\"\n        args=\"load image_proc/rectify $(arg  name)_nodelet_manager\" if=\"$(arg rectify_rgb)\"&gt;\n        &lt;remap from=\"image_mono\" to=\"$(arg name)/$(arg color_sens_name)/image_raw\" /&gt;\n        &lt;remap from=\"image_rect\" to=\"$(arg name)/$(arg color_sens_name)/image_rect\" /&gt;\n    &lt;/node&gt;\n\n    &lt;node pkg=\"nodelet\" type=\"nodelet\" name=\"depth_image_to_rgb_pointcloud\"\n        args=\"load depth_image_proc/point_cloud_xyzrgb $(arg  name)_nodelet_manager\"\n        if=\"$(arg enable_pointcloud)\"&gt;\n        &lt;param name=\"queue_size\" value=\"10\" /&gt;\n\n        &lt;remap from=\"rgb/camera_info\" to=\"$(arg name)/$(arg color_sens_name)/camera_info\" /&gt;\n        &lt;remap from=\"rgb/image_rect_color\" to=\"$(arg name)/$(arg color_sens_name)/image_rect\" if=\"$(arg rectify_rgb)\" /&gt;\n        &lt;remap from=\"rgb/image_rect_color\" to=\"$(arg name)/$(arg color_sens_name)/image_raw\"\n            unless=\"$(arg rectify_rgb)\" /&gt;\n        &lt;remap from=\"depth_registered/image_rect\" to=\"$(arg name)/$(arg stereo_sens_name)/$(arg depth_topic_suffix)\" /&gt;\n        &lt;remap from=\"depth_registered/points\" to=\"$(arg points_topic_name)\" /&gt;\n    &lt;/node&gt;\n\n&lt;/launch&gt;\n</code></pre>"},{"location":"content/sensors/rgbd/luxonis_oak-d_pro/#ros-2-foxy_1","title":"ROS 2 Foxy","text":"<pre><code>source /opt/ros/foxy/setup.bash\nsource /home/user/dai_ros2_ws/install/setup.bash\n\nros2 launch depthai_ros_driver camera.launch.py\n</code></pre> camera.launch.py<pre><code>import os\n\nfrom ament_index_python.packages import get_package_share_directory\nfrom launch import LaunchDescription\nfrom launch.actions import DeclareLaunchArgument, IncludeLaunchDescription, OpaqueFunction\nfrom launch.launch_description_sources import PythonLaunchDescriptionSource\nfrom launch.substitutions import LaunchConfiguration\nfrom launch.conditions import IfCondition\nfrom launch_ros.actions import ComposableNodeContainer, Node\nfrom launch_ros.descriptions import ComposableNode\n\n\ndef launch_setup(context, *args, **kwargs):\n    log_level = 'info'\n    if(context.environment.get('DEPTHAI_DEBUG')=='1'):\n        log_level='debug'\n\n    urdf_launch_dir = os.path.join(get_package_share_directory('depthai_descriptions'), 'launch')\n\n    params_file = LaunchConfiguration(\"params_file\")\n    camera_model = LaunchConfiguration('camera_model',  default = 'OAK-D')\n\n    name = LaunchConfiguration('name').perform(context)\n\n    parent_frame = LaunchConfiguration('parent_frame',  default = 'oak-d-base-frame')\n    cam_pos_x    = LaunchConfiguration('cam_pos_x',     default = '0.0')\n    cam_pos_y    = LaunchConfiguration('cam_pos_y',     default = '0.0')\n    cam_pos_z    = LaunchConfiguration('cam_pos_z',     default = '0.0')\n    cam_roll     = LaunchConfiguration('cam_roll',      default = '0.0')\n    cam_pitch    = LaunchConfiguration('cam_pitch',     default = '0.0')\n    cam_yaw      = LaunchConfiguration('cam_yaw',       default = '0.0')\n\n    return [\n            Node(\n                condition=IfCondition(LaunchConfiguration(\"use_rviz\").perform(context)),\n                package=\"rviz2\",\n                executable=\"rviz2\",\n                name=\"rviz2\",\n                output=\"log\",\n                arguments=[\"-d\", LaunchConfiguration(\"rviz_config\")],\n            ),\n        IncludeLaunchDescription(\n            PythonLaunchDescriptionSource(\n                os.path.join(urdf_launch_dir, 'urdf_launch.py')),\n            launch_arguments={'tf_prefix': name,\n                              'camera_model': camera_model,\n                              'base_frame': name,\n                              'parent_frame': parent_frame,\n                              'cam_pos_x': cam_pos_x,\n                              'cam_pos_y': cam_pos_y,\n                              'cam_pos_z': cam_pos_z,\n                              'cam_roll': cam_roll,\n                              'cam_pitch': cam_pitch,\n                              'cam_yaw': cam_yaw}.items()),\n\n        ComposableNodeContainer(\n            name=name+\"_container\",\n            namespace=\"\",\n            package=\"rclcpp_components\",\n            executable=\"component_container\",\n            composable_node_descriptions=[\n                    ComposableNode(\n                        package=\"depthai_ros_driver\",\n                        plugin=\"depthai_ros_driver::Camera\",\n                        name=name,\n                        parameters=[params_file],\n                    )\n            ],\n            arguments=['--ros-args', '--log-level', log_level],\n            output=\"both\",\n        ),\n\n    ]\n\n\ndef generate_launch_description():\n    depthai_prefix = get_package_share_directory(\"depthai_ros_driver\")\n\n    declared_arguments = [\n        DeclareLaunchArgument(\"name\", default_value=\"oak\"),\n        DeclareLaunchArgument(\"parent_frame\", default_value=\"oak-d-base-frame\"),\n        DeclareLaunchArgument(\"cam_pos_x\", default_value=\"0.0\"),\n        DeclareLaunchArgument(\"cam_pos_y\", default_value=\"0.0\"),\n        DeclareLaunchArgument(\"cam_pos_z\", default_value=\"0.0\"),\n        DeclareLaunchArgument(\"cam_roll\", default_value=\"0.0\"),\n        DeclareLaunchArgument(\"cam_pitch\", default_value=\"0.0\"),\n        DeclareLaunchArgument(\"cam_yaw\", default_value=\"0.0\"),\n        DeclareLaunchArgument(\"params_file\", default_value=os.path.join(depthai_prefix, 'config', 'camera.yaml')),\n        DeclareLaunchArgument(\"use_rviz\", default_value='false'),\n        DeclareLaunchArgument(\"rviz_config\", default_value=os.path.join(depthai_prefix, \"config\", \"rviz\", \"rgbd.rviz\"))\n    ]\n\n    return LaunchDescription(\n        declared_arguments + [OpaqueFunction(function=launch_setup)]\n    )\n</code></pre> camera.yaml<pre><code>camera:\n  i_enable_imu: true\n  i_enable_ir: true\n  i_floodlight_brightness: 0\n  i_ip: ''\n  i_laser_dot_brightness: 800\n  i_mx_id: ''\n  i_nn_type: spatial\n  i_pipeline_type: RGBD\n  i_usb_port_id: ''\n  i_usb_speed: SUPER_PLUS\n  i_pipeline_dump: false\n  i_calibration_dump: false\n  i_external_calibration_path: ''\nleft:\n  i_board_socket_id: 1\n  i_calibration_file: ''\n  i_get_base_device_timestamp: true\n  i_fps: 30.0\n  i_height: 720\n  i_low_bandwidth: false\n  i_low_bandwidth_quality: 50\n  i_max_q_size: 30\n  i_publish_topic: false\n  i_simulate_from_topic: false\n  i_disable_node: false\n  i_resolution: '720'\n  i_width: 1280\n  r_exposure: 1000\n  r_iso: 800\n  r_set_man_exposure: false\nnn:\n  i_nn_config_path: depthai_ros_driver/mobilenet\n  i_disable_resize: false\n  i_enable_passthrough: false\n  i_enable_passthrough_depth: false\nrgb:\n  i_board_socket_id: 0\n  i_simulate_from_topic: false\n  i_get_base_device_timestamp: true\n  i_disable_node: false\n  i_calibration_file: ''\n  i_enable_preview: false\n  i_fps: 30.0\n  i_height: 720\n  i_interleaved: false\n  i_keep_preview_aspect_ratio: true\n  i_low_bandwidth: false\n  i_low_bandwidth_quality: 50\n  i_max_q_size: 30\n  i_preview_size: 300\n  i_publish_topic: true\n  i_resolution: '1080'\n  i_set_isp_scale: true\n  i_isp_num: 2\n  i_isp_den: 3\n  i_output_isp: true\n  i_width: 1280\n  r_exposure: 20000\n  r_focus: 1\n  r_iso: 800\n  r_set_man_exposure: false\n  r_set_man_focus: false\n  r_set_man_whitebalance: false\n  r_whitebalance: 3300\nright:\n  i_board_socket_id: 2\n  i_calibration_file: ''\n  i_get_base_device_timestamp: true\n  i_fps: 30.0\n  i_height: 720\n  i_low_bandwidth: false\n  i_low_bandwidth_quality: 50\n  i_max_q_size: 30\n  i_publish_topic: false\n  i_simulate_from_topic: false\n  i_disable_node: false\n  i_resolution: '720'\n  i_width: 1280\n  r_exposure: 1000\n  r_iso: 800\n  r_set_man_exposure: false\nstereo:\n  i_align_depth: true\n  i_get_base_device_timestamp: true\n  i_output_disparity: false\n  i_bilateral_sigma: 0\n  i_board_socket_id: 0\n  i_depth_filter_size: 5\n  i_depth_preset: HIGH_ACCURACY\n  i_disparity_width: DISPARITY_96\n  i_enable_companding: false\n  i_enable_decimation_filter: false\n  i_enable_distortion_correction: true\n  i_enable_spatial_filter: false\n  i_enable_speckle_filter: false\n  i_enable_temporal_filter: false\n  i_enable_threshold_filter: false\n  i_extended_disp: false\n  i_height: 720\n  i_low_bandwidth: false\n  i_low_bandwidth_quality: 50\n  i_lr_check: true\n  i_lrc_threshold: 10\n  i_max_q_size: 30\n  i_rectify_edge_fill_color: 0\n  i_stereo_conf_threshold: 255\n  i_set_input_size: false\n  i_input_width: 1280\n  i_input_height: 720\n  i_width: 1280\nuse_sim_time: false\n</code></pre>"}]}